/* Copyright 2001, 2019 IBM Corporation
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the 
 * following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the 
 * following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
 * following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 class ExclusionList 
{
  enum {
    k_MaxSiteCount = 4096 ,
    k_BitMapSize = 131072 ,
    k_BitsPerChar = 8
  } ;
  class AtomRec
  {
    unsigned int m_LowestExclusion ;
    unsigned int m_HighestExclusion ;
    unsigned int m_MyFirstBit ;
  } ;
  AtomRec mA[k_MaxSiteCount] ;
  char mBitMap[k_BitMapSize/k_BitsPerChar] ;
  int m_WorkingAtom ;
  
  public:
  void Init(void) ;
  void Insert(unsigned int aAbsSiteId1, unsigned int aAbsSiteId2) ;
  void Consolidate(void) ;
  int AreSitesInExclusionList(unsigned int aAbsSiteId1, unsigned int aAbsSiteId2) ;
} ;

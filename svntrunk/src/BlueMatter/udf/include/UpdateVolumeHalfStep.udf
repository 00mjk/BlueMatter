/* Copyright 2001, 2019 IBM Corporation
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the 
 * following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the 
 * following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
 * following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 void UpdateVolumeHalfStep(
        MDVM &aMDVM
        )
{
    // UDF: 1 MDVM, 0 sites, Harmonic:UpdateVirial

    // does a half-step update on the volume velocity to T+dT/2
    //
    // assumes that the volume_force has been set correctly

    XYZ    volume_velocity        = aMDVM.GetVolumeVelocity();
///////    XYZ    volume_force           = aMDVM.GetVolumeForce();
    XYZ    volume_impulse           = aMDVM.GetVolumeImpulse();
    // double volume_mass         = aMDVM.GetVolumeMass();
    double volume_halfinversemass = aMDVM.GetVolumeHalfInverseMass();
    // double dt                     = aMDVM.GetDeltaT();

    // aMDVM.ReportVolumeVelocity( volume_velocity + volume_force / volume_mass * dt / 2.0 );
//////////    aMDVM.ReportVolumeVelocity( volume_velocity + volume_force * volume_halfinversemass * dt );
    aMDVM.ReportVolumeVelocity( volume_velocity + volume_impulse * volume_halfinversemass );
    aMDVM.ReportOldVolumeVelocity( volume_velocity );
    return;
}

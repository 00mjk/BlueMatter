CREATE SCHEMA EXPERIMENT;

--****************************************************
-- CTP Tables
--****************************************************
CREATE TABLE EXPERIMENT.ctp_table (
 ctp_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY ( START WITH 30000 ),
 filename VARCHAR(40) NOT NULL,
 desc  VARCHAR(100),
 creator VARCHAR(30) NOT NULL,       
 created TIMESTAMP NOT NULL,
 PRIMARY KEY (ctp_id)) IN mdshort;

CREATE TABLE EXPERIMENT.vocab (
 name VARCHAR(100) NOT NULL,
 desc VARCHAR(200),
 attribute VARCHAR(60),
 PRIMARY KEY (name)) IN mdshort;

CREATE TABLE EXPERIMENT.ct_params (
 ctp_id INT NOT NULL,
 name VARCHAR(100) NOT NULL, 
 value VARCHAR(200) NOT NULL,
 type VARCHAR(20), 
 PRIMARY KEY ( ctp_id, name ), 
 FOREIGN KEY ( ctp_id ) REFERENCES EXPERIMENT.ctp_table ON DELETE CASCADE,
 FOREIGN KEY ( name ) REFERENCES EXPERIMENT.vocab ON DELETE CASCADE) IN mdshort;
--*****************************************************

--****************************************************
-- Impl File Tables
--****************************************************
CREATE TABLE EXPERIMENT.impl_table (
 impl_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 0),
 filename VARCHAR(40) NOT NULL,
 desc  VARCHAR(100),
 creator VARCHAR(30) NOT NULL,       
 created TIMESTAMP NOT NULL,
 PRIMARY KEY (impl_id)) IN mdshort;

CREATE TABLE EXPERIMENT.impl_vocab (
 name VARCHAR(100) NOT NULL,
 desc VARCHAR(200),
 attribute VARCHAR(60),
 PRIMARY KEY (name)) IN mdshort;

CREATE TABLE EXPERIMENT.impl_params (
 impl_id INT NOT NULL,
 name VARCHAR(100) NOT NULL, 
 value VARCHAR(200) NOT NULL,
 literal VARCHAR(20), 
 PRIMARY KEY ( impl_id, name ), 
 FOREIGN KEY ( impl_id ) REFERENCES EXPERIMENT.impl_table ON DELETE CASCADE,
 FOREIGN KEY ( name ) REFERENCES EXPERIMENT.impl_vocab ON DELETE CASCADE) IN mdshort;
--*****************************************************

--*******************************************************
-- Platform File Tables ( for now these are only 
-- compiler flags )
--*******************************************************
CREATE TABLE EXPERIMENT.platform_table (
 platform_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 0),
 filename VARCHAR(40) NOT NULL,
 desc  VARCHAR(100),
 creator VARCHAR(30) NOT NULL,       
 created TIMESTAMP NOT NULL,
 PRIMARY KEY (platform_id)) IN mdshort;

CREATE TABLE EXPERIMENT.platform_params (
 platform_id INT NOT NULL,
 name VARCHAR(100) NOT NULL, 
 value VARCHAR(200) NOT NULL,
 type VARCHAR(20), 
 PRIMARY KEY ( platform_id, name ), 
 FOREIGN KEY ( platform_id ) REFERENCES EXPERIMENT.platform_table ON DELETE CASCADE ) IN mdshort;
--*****************************************************

CREATE TABLE EXPERIMENT.system_source ( 
 source_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 30000),
 sys_id INT NOT NULL,
 ctp_id INT NOT NULL,
 PRIMARY KEY ( source_id ),
 FOREIGN KEY ( sys_id ) REFERENCES MDSYSTEM.system ON DELETE CASCADE,
 FOREIGN KEY ( ctp_id ) REFERENCES EXPERIMENT.ctp_table ON DELETE CASCADE) IN mdshort;

CREATE TABLE EXPERIMENT.probspec ( 
 probspec_version INT NOT NULL, 
 tag VARCHAR(200) NOT NULL,
 PRIMARY KEY ( probspec_version )) IN mdshort;
         
CREATE TABLE EXPERIMENT.executable ( 
 executable_id       INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 30000), 
 builder             VARCHAR(50) NOT NULL,
 build_begin         TIMESTAMP,
 build_end           TIMESTAMP,
 probspec_version    INT,                      
 source_id           INT NOT NULL,
 platform_id         INT NOT NULL,
 impl_id             INT NOT NULL,
 install_image_tag   VARCHAR(100) NOT NULL,
 install_image_path  VARCHAR(200) NOT NULL,
 PRIMARY KEY ( executable_id ),
 FOREIGN KEY ( probspec_version ) REFERENCES EXPERIMENT.probspec ON DELETE CASCADE,
 FOREIGN KEY ( impl_id ) REFERENCES EXPERIMENT.impl_table ON DELETE CASCADE,
 FOREIGN KEY ( platform_id ) REFERENCES EXPERIMENT.platform_table ON DELETE CASCADE,
 FOREIGN KEY ( source_id ) REFERENCES EXPERIMENT.system_source ON DELETE CASCADE) IN mdshort;

CREATE TABLE EXPERIMENT.rtp_table ( 
 rtp_id       INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 0),
 filename     VARCHAR(40) NOT NULL,
 desc         VARCHAR(60) NOT NULL,
 creator VARCHAR(30) NOT NULL,
 created TIMESTAMP NOT NULL,       
 PRIMARY KEY ( rtp_id )) IN mdshort;

CREATE TABLE EXPERIMENT.rt_params ( 
 rtp_id        INT NOT NULL, 
 name          VARCHAR(100) NOT NULL,
 value         VARCHAR(200) NOT NULL,
 PRIMARY KEY ( rtp_id, name ), 
 FOREIGN KEY ( rtp_id ) REFERENCES EXPERIMENT.rtp_table ON DELETE CASCADE,
 FOREIGN KEY ( name ) REFERENCES EXPERIMENT.vocab ON DELETE CASCADE) IN mdshort;

CREATE TABLE EXPERIMENT.coords_table (
 coord_id       INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1100), 
 sys_id         INT NOT NULL,  
 solvent_model  VARCHAR(60) NOT NULL, 
 created        TIMESTAMP,
 file_name      VARCHAR(60) NOT NULL,
 annotation     VARCHAR(128),
 snapshot       BLOB(32M) NOT NULL COMPACT,
 PRIMARY KEY (coord_id),
 FOREIGN KEY ( sys_id ) references mdsystem.system on delete cascade)
 IN mdshort LONG IN mdlong;

CREATE TABLE EXPERIMENT.experiment (
 exp_id          INT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 0),
 pdb             CLOB,
 solvent_mol_count   INT,
 nonsolv_atom_count  INT NOT NULL,
 desc            VARCHAR(128) NOT NULL,
 working_dir     VARCHAR(1024) NOT NULL,
 seed_name       VARCHAR(64) NOT NULL,
 dvs_start       VARCHAR(128) NOT NULL,
 PRIMARY KEY (exp_id) )
 IN mdshort LONG IN mdlong;

CREATE TABLE EXPERIMENT.exp_params (
 exp_id         INT NOT NULL,
 name           VARCHAR(64) NOT NULL,
 value          VARCHAR(256) NOT NULL,
 PRIMARY KEY    (exp_id, name),
 FOREIGN KEY (exp_id) references experiment.experiment on delete cascade)
 IN mdshort LONG IN mdlong;
 

CREATE TABLE EXPERIMENT.run ( 
 exp_id        INT NOT NULL,
 seq_id        INT NOT NULL,
 srdg_count    INT NOT NULL,
 node_count    INT NOT NULL,
 split_size    INT NOT NULL,
 rdg_base      VARCHAR(128) NOT NULL,
 executable_id INT NOT NULL,
 dvs_start     VARCHAR(128) NOT NULL,
 dvs_stop      VARCHAR(128),
 run_begin     TIMESTAMP,
 run_end       TIMESTAMP,
 PRIMARY KEY ( exp_id, seq_id ), 
 FOREIGN KEY ( exp_id ) REFERENCES EXPERIMENT.experiment ON DELETE CASCADE,
 FOREIGN KEY ( executable_id ) REFERENCES EXPERIMENT.executable ON DELETE CASCADE)
 IN mdshort LONG IN mdlong;

CREATE TABLE EXPERIMENT.run_params (
 exp_id         INT NOT NULL,
 seq_id         INT NOT NULL,
 name           VARCHAR(64) NOT NULL,
 value          VARCHAR(256) NOT NULL,
 PRIMARY KEY    (exp_id, seq_id, name),
 FOREIGN KEY (exp_id, seq_id) references experiment.run on delete cascade)
 IN mdshort LONG IN mdlong;


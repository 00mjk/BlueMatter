/* Copyright 2001, 2019 IBM Corporation
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the 
 * following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the 
 * following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
 * following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 //File generated on: Tue Sep 30 15:02:26 EDT 2003
//%database_name:mdsetup
//%source_id:36620
//%system_id:19531
//%ctp_id:36860
//%impl_id:492
//%plt_id:266
//%probspec_version:v1.0.0
//%probspec_tag:RTP file is comming in from db2
//%magic_number:0xFACEB0B4



/** BEGIN_COMPILE_SCRIPT

#! /bin/ksh

rm -rf *.o

rm -rf *.a

# pick out install base
BG_INSTALL_BASE=`installbase.py`
export SHIPDATA_DIR=$BG_INSTALL_BASE/usr/opt/bluegene/
export SHIPDATA_INCLUDE=$SHIPDATA_DIR/include/
export SHIPDATA_LIB=$SHIPDATA_DIR/lib/
export SHIPDATA_SRC=$SHIPDATA_DIR/src/
export SHIPDATA_BIN=$SHIPDATA_DIR/bin/


export BGL_INSTALL=/BlueLight/floor

# First compiler pass ( compile the DATA ONLY )
rsh cysteine "cd $PWD && /opt/ibmcmp/vac/6.0/bin/blrts_xlC -qarch=440 \
-I./ \
-I$SHIPDATA_INCLUDE \
-qpriority=1 \
-qalign=natural \
-DMSD_COMPILE_DATA_ONLY \
$1.cpp \
 -DPK_BLADE -DPK_BGL \
-qsuppress=1540-1090:1540-1087:1540-1089:1540-1088 \
-qnoeh -qnounwind \
-c -o $1.data.o"</dev/null



# Second compiler pass ( compile the CODE ONLY )
echo ''
rsh cysteine "cd $PWD && /opt/ibmcmp/vac/6.0/bin/blrts_xlC  -DARCH_HAS_FSEL  -DBLAKE  -DEXCEPTIONS_UNAVAILABLE  -DNDEBUG  -DNSQ_SINGLE_COMPUTE  -DPERFORMANCE_PERIODIC_IMAGE  -DPERFORMANCE_SWITCH  -DPK_MPI  -DPK_PARALLEL  -DPK_PHASE1 -DPK_AIX  -DPK_XLC -DRDG_TO_FXLOGGER  -DSITE_SITE_CUTOFF  -DSUPPRESS_MONITOR  -DUSE_SQRT_WRAP  -DWATER_WATER_CUTOFF   -qarch=440  -qmaxmem=-1  -qnoeh  -qnolm  -qnostrict  -qnounwind  -qpriority=0  -qsuppress=1540-1087:1540-1089:1540-1088:1540-1090  -qalign=natural   -I. -I$SHIPDATA_INCLUDE  -I/$BGL_INSTALL/bglsys/include  -DMSD_COMPILE_CODE_ONLY $1.data.o  $1.cpp  $SHIPDATA_SRC/pk/exception.cpp  $SHIPDATA_SRC/pk/fxlogger.cpp  $SHIPDATA_SRC/pk/globject.cpp  $SHIPDATA_SRC/pk/platform.cpp  $SHIPDATA_SRC/pk/pktrace.cpp  $SHIPDATA_SRC/pk/pksincos.cpp  $SHIPDATA_SRC/pk/mpi_reactor.cpp  $1.dvs.cpp  -L$SHIPDATA_LIB -L/$BGL_INSTALL/bglsys/lib -ldevices.rts -lm -lmpich.rts  -lrts.rts  -o $1.rts"</dev/null;


END_COMPILE_SCRIPT **/


#ifndef __MSD_HPP__
#define __MSD_HPP__
#ifndef EXECUTABLEID 
#define EXECUTABLEID -1
#endif 
#ifndef MSD_COMPILE_DATA_ONLY
#include <pk/platform.hpp>
#include <pk/fxlogger.hpp>
#include <pk/pktrace.hpp>  // Needed by the pk tracing instrumentation
#endif
#include <BlueMatter/XYZ.hpp>
#include <BlueMatter/BoundingBox.hpp>

#ifndef assert
#include <assert.h>
#endif
#ifndef MSD_COMPILE_DATA_ONLY
#include <BlueMatter/RunTimeGlobals.hpp>
#endif
#include <BlueMatter/UDF_Binding.hpp>
#include <BlueMatter/MSD_Prefix.hpp>
#define MSDDEF_DoWaterInit	0

#define MSDDEF_DoRespa	0

#define MSDDEF_DoVelocityResample	1

#define MSDDEF_DoTemperatureControl	1

#define MSDDEF_DoShakeRattleProtein	1

#define MSDDEF_DoPressureControl	0

#define MSDDEF_DoShakeRattleWater	1

#define MSDDEF_DoNVT	1

#define MSDDEF_DoShakeRattle	1

#define MSDDEF_NOSE_HOOVER	0

#define MSDDEF_DoFreeEnergy	0

#define MSDDEF_DoNSQCheck	0

#define MSDDEF_STDCOULOMB

#define charge14  1
#define charge14scale  1.0
#define ChargeConversion  SciConst::StdChargeConversion
#define lj14  1
#define lj14scale  1.0
#define TimeConversionFactor  SciConst::StdTimeConversion


class MSD
{
public:

enum { NSQ0 = 0, NSQ1 = 1, NSQ2 = 2};
enum { Exclusion = 0, Inclusion = 1};
enum { WATER = 0, AMINOACID = 1, OTHER=2};
enum { NORM = 0, COMB = 1};

static const int    SimTicksAtRespaLevel[];
static const int    RespaLevelByUDFCode[];
static const int    NumberOfRespaLevels;
static const int    NumberOfNoseHooverRespaLevels;
static const double    NoseHooverMassFactor;
static int          NumberOfSimTicks;
static const double ConvertedInnerTimeStep;
static const double IntegratorLevelConvertedTimeDelta[];
static const double SwitchLowerCutoffForShell[];

static const double SwitchDeltaForShell[];

static const int DoNonBondedAtRespaLevel[];

static const int RespaLevelOfFirstShell;
static const double ShakeTolerance;
static const int    ShakeMaxIterations;
static const double RattleTolerance;
static const int    RattleMaxIterations;
static const double EwaldAlpha;
static const double LeknerEpsilon;
static const int    EwaldKmax;
static const int    P3MEchargeAssignment;
static const int    P3MEdiffOrder;
static const double InnerTimeStepInPicoSeconds;
static const int    NumberOfInnerTimeSteps;
static const int       DoOuter;
static const double OuterTimeStepInPicoSeconds;
static int    NumberOfOuterTimeSteps;
static const int    NumberOfConstraints;
static int    SnapshotPeriodInOTS;
static const int    SimTicksPerTimeStep;
static int    EmitEnergyTimeStepModulo;
static const double    ExternalPressure;
static double    PressureControlPistonMass;
static double    PressureControlPistonInitialVelocity;
static int       VelocityResamplePeriodInOTS;
static int       VelocityResampleRandomSeed;
static double    VelocityResampleTargetTemperature;
static double    PressureControlTarget;
static BoundingBox    BoundingBoxDef;
static const double    Lambda;

static const double TimeConversionFactorMsd;
static UdfInvocation UdfInvocationTable[];
static const int UdfInvocationTableSize;

static const int magicNumber;

static const int sourceId;

static const SiteInfo SiteInformation[];
static const int SiteInformationSize;

static const int SiteIDtoSiteTypeMap[];
static const int SiteIDtoSiteTypeMapSize;

static const UDF_Binding::NSQCoulomb_Params ChargeNsqParams[];
static const UDF_Binding::NSQLennardJones_Params LJNsqParams[];
static const int NumberOfNsqSiteTypes;

static const int NsqSiteIDtoSiteTypeMap[];
static const int NsqSiteIDtoSiteTypeMapSize;

static const int ExclusionList1_2_3_4[];
static const int ExclusionList1_2_3_4Size;

static const NsqUdfInvocation NsqInvocationTable[];
static const int NsqInvocationTableSize;

static const UDF_Binding::LennardJonesForce_Params LJ14PairTable[];
static const int LJ14PairTableSize;

static const UDF_Binding::Coulomb14_Params Charge14PairTable[];
static const int Charge14PairTableSize;

static const int Pair14SiteList[];
static const int Pair14SiteListSize;

static const IrreduciblePartitionType IrreduciblePartitionTypeList[];
static const int IrreduciblePartitionTypeListSize;

static const int IrreduciblePartitionCount;

static const IrreduciblePartitionMap IrreduciblePartitionIndexToTypeMap[];
static const int IrreduciblePartitionIndexToTypeMapSize;

static const int ExternalToInternalSiteIdMap[];
static const int ExternalToInternalSiteIdMapSize;

static const int InternalToExternalSiteIdMap[];
static const int InternalToExternalSiteIdMapSize;

inline static int GetNumberOfSimTicks();

static const int NumberOfEnergyReportingUDFs;

static const int Water3sites[];

static const int Rigid2Sites[];
static const int Rigid3Sites[];
static const int Rigid4Sites[];

static const UDF_Binding::ShakeGroup2_Params Rigid2Params[];
static const UDF_Binding::ShakeGroup3_Params Rigid3Params[];
static const UDF_Binding::ShakeGroup4_Params Rigid4Params[];

static const int ImproperDihedralForce_sitesSiteTupleList[];
static const UDF_Binding::ImproperDihedralForce_Params ImproperDihedralForce_paramsParamTupleList[];

static const int StdHarmonicAngleForce_sitesSiteTupleList[];
static const UDF_Binding::StdHarmonicAngleForce_Params StdHarmonicAngleForce_paramsParamTupleList[];

static const int StdHarmonicBondForce_sitesSiteTupleList[];
static const UDF_Binding::StdHarmonicBondForce_Params StdHarmonicBondForce_paramsParamTupleList[];

static const int SwopeTorsionForce_sitesSiteTupleList[];
static const UDF_Binding::SwopeTorsionForce_Params SwopeTorsionForce_paramsParamTupleList[];

static const int UreyBradleyForce_sitesSiteTupleList[];
static const UDF_Binding::UreyBradleyForce_Params UreyBradleyForce_paramsParamTupleList[];

};

#ifndef MSD_COMPILE_CODE_ONLY
// All molecules in their own fragment
const IrreduciblePartitionType MSD::IrreduciblePartitionTypeList[] = 
{
/*NONE*/ { 4 ,  MSD::OTHER, 0 , 3, 3.0 },
/*NONE*/ { 2 ,  MSD::OTHER, 0 , 1, 3.0 },
/*NONE*/ { 4 ,  MSD::OTHER, 0 , 3, 3.0 },
/*NONE*/ { 3 ,  MSD::OTHER, 0 , 0, 3.0 },
/*NONE*/ { 3 ,  MSD::WATER, 0 , 3, 1.1 * 0.9572 }
};
const int MSD::IrreduciblePartitionTypeListSize = 5;

// {start_site , ip_type, molecule_id, fragments_index_in_molecule} 
const IrreduciblePartitionMap MSD::IrreduciblePartitionIndexToTypeMap[] = 
{
{0, 0, 0, 0},
{4, 1, 0, 1},
{6, 2, 0, 2},
{10, 3, 0, 3},
{13, 4, 1, 0},
{16, 4, 2, 0},
{19, 4, 3, 0},
{22, 4, 4, 0},
{25, 4, 5, 0},
{28, 4, 6, 0},
{31, 4, 7, 0},
{34, 4, 8, 0},
{37, 4, 9, 0},
{40, 4, 10, 0},
{43, 4, 11, 0},
{46, 4, 12, 0},
{49, 4, 13, 0},
{52, 4, 14, 0},
{55, 4, 15, 0},
{58, 4, 16, 0},
{61, 4, 17, 0},
{64, 4, 18, 0},
{67, 4, 19, 0},
{70, 4, 20, 0},
{73, 4, 21, 0},
{76, 4, 22, 0},
{79, 4, 23, 0},
{82, 4, 24, 0},
{85, 4, 25, 0},
{88, 4, 26, 0},
{91, 4, 27, 0},
{94, 4, 28, 0},
{97, 4, 29, 0},
{100, 4, 30, 0},
{103, 4, 31, 0},
{106, 4, 32, 0},
{109, 4, 33, 0},
{112, 4, 34, 0},
{115, 4, 35, 0},
{118, 4, 36, 0},
{121, 4, 37, 0},
{124, 4, 38, 0},
{127, 4, 39, 0},
{130, 4, 40, 0},
{133, 4, 41, 0},
{136, 4, 42, 0},
{139, 4, 43, 0},
{142, 4, 44, 0},
{145, 4, 45, 0},
{148, 4, 46, 0},
{151, 4, 47, 0},
{154, 4, 48, 0},
{157, 4, 49, 0},
{160, 4, 50, 0},
{163, 4, 51, 0},
{166, 4, 52, 0},
{169, 4, 53, 0},
{172, 4, 54, 0},
{175, 4, 55, 0},
{178, 4, 56, 0},
{181, 4, 57, 0},
{184, 4, 58, 0},
{187, 4, 59, 0},
{190, 4, 60, 0},
{193, 4, 61, 0},
{196, 4, 62, 0},
{199, 4, 63, 0},
{202, 4, 64, 0},
{205, 4, 65, 0},
{208, 4, 66, 0},
{211, 4, 67, 0},
{214, 4, 68, 0},
{217, 4, 69, 0},
{220, 4, 70, 0},
{223, 4, 71, 0},
{226, 4, 72, 0},
{229, 4, 73, 0},
{232, 4, 74, 0},
{235, 4, 75, 0},
{238, 4, 76, 0},
{241, 4, 77, 0},
{244, 4, 78, 0},
{247, 4, 79, 0},
{250, 4, 80, 0},
{253, 4, 81, 0},
{256, 4, 82, 0},
{259, 4, 83, 0},
{262, 4, 84, 0},
{265, 4, 85, 0},
{268, 4, 86, 0},
{271, 4, 87, 0},
{274, 4, 88, 0},
{277, 4, 89, 0},
{280, 4, 90, 0},
{283, 4, 91, 0},
{286, 4, 92, 0},
{289, 4, 93, 0},
{292, 4, 94, 0},
{295, 4, 95, 0},
{298, 4, 96, 0},
{301, 4, 97, 0},
{304, 4, 98, 0},
{307, 4, 99, 0},
{310, 4, 100, 0},
{313, 4, 101, 0},
{316, 4, 102, 0},
{319, 4, 103, 0},
{322, 4, 104, 0},
{325, 4, 105, 0},
{328, 4, 106, 0},
{331, 4, 107, 0},
{334, 4, 108, 0},
{337, 4, 109, 0},
{340, 4, 110, 0},
{343, 4, 111, 0},
{346, 4, 112, 0},
{349, 4, 113, 0},
{352, 4, 114, 0},
{355, 4, 115, 0},
{358, 4, 116, 0},
{361, 4, 117, 0},
{364, 4, 118, 0},
{367, 4, 119, 0},
{370, 4, 120, 0},
{373, 4, 121, 0},
{376, 4, 122, 0},
{379, 4, 123, 0},
{382, 4, 124, 0},
{385, 4, 125, 0},
{388, 4, 126, 0},
{391, 4, 127, 0},
{394, 4, 128, 0},
{397, 4, 129, 0},
{400, 4, 130, 0},
{403, 4, 131, 0},
{406, 4, 132, 0},
{409, 4, 133, 0},
{412, 4, 134, 0},
{415, 4, 135, 0},
{418, 4, 136, 0},
{421, 4, 137, 0},
{424, 4, 138, 0},
{427, 4, 139, 0},
{430, 4, 140, 0},
{433, 4, 141, 0},
{436, 4, 142, 0},
{439, 4, 143, 0},
{442, 4, 144, 0},
{445, 4, 145, 0},
{448, 4, 146, 0},
{451, 4, 147, 0},
{454, 4, 148, 0},
{457, 4, 149, 0},
{460, 4, 150, 0},
{463, 4, 151, 0},
{466, 4, 152, 0},
{469, 4, 153, 0},
{472, 4, 154, 0},
{475, 4, 155, 0},
{478, 4, 156, 0},
{481, 4, 157, 0},
{484, 4, 158, 0},
{487, 4, 159, 0},
{490, 4, 160, 0},
{493, 4, 161, 0},
{496, 4, 162, 0},
{499, 4, 163, 0},
{502, 4, 164, 0},
{505, 4, 165, 0},
{508, 4, 166, 0},
{511, 4, 167, 0},
{514, 4, 168, 0},
{517, 4, 169, 0},
{520, 4, 170, 0},
{523, 4, 171, 0},
{526, 4, 172, 0},
{529, 4, 173, 0},
{532, 4, 174, 0},
{535, 4, 175, 0},
{538, 4, 176, 0},
{541, 4, 177, 0},
{544, 4, 178, 0},
{547, 4, 179, 0},
{550, 4, 180, 0},
{553, 4, 181, 0},
{556, 4, 182, 0},
{559, 4, 183, 0},
{562, 4, 184, 0},
{565, 4, 185, 0},
{568, 4, 186, 0},
{571, 4, 187, 0},
{574, 4, 188, 0},
{577, 4, 189, 0},
{580, 4, 190, 0},
{583, 4, 191, 0},
{586, 4, 192, 0},
{589, 4, 193, 0},
{592, 4, 194, 0},
{595, 4, 195, 0},
{598, 4, 196, 0},
{601, 4, 197, 0},
{604, 4, 198, 0},
{607, 4, 199, 0},
{610, 4, 200, 0},
{613, 4, 201, 0},
{616, 4, 202, 0},
{619, 4, 203, 0},
{622, 4, 204, 0},
{625, 4, 205, 0},
{628, 4, 206, 0},
{631, 4, 207, 0},
{634, 4, 208, 0},
{637, 4, 209, 0},
{640, 4, 210, 0},
{643, 4, 211, 0},
{646, 4, 212, 0},
{649, 4, 213, 0},
{652, 4, 214, 0},
{655, 4, 215, 0},
{658, 4, 216, 0},
{661, 4, 217, 0},
{664, 4, 218, 0},
{667, 4, 219, 0},
{670, 4, 220, 0},
{673, 4, 221, 0},
{676, 4, 222, 0},
{679, 4, 223, 0},
{682, 4, 224, 0},
{685, 4, 225, 0},
{688, 4, 226, 0},
{691, 4, 227, 0},
{694, 4, 228, 0},
{697, 4, 229, 0},
{700, 4, 230, 0},
{703, 4, 231, 0},
{706, 4, 232, 0},
{709, 4, 233, 0},
{712, 4, 234, 0},
{715, 4, 235, 0},
{718, 4, 236, 0},
{721, 4, 237, 0},
{724, 4, 238, 0},
{727, 4, 239, 0},
{730, 4, 240, 0},
{733, 4, 241, 0},
{736, 4, 242, 0},
{739, 4, 243, 0},
{742, 4, 244, 0},
{745, 4, 245, 0},
{748, 4, 246, 0},
{751, 4, 247, 0},
{754, 4, 248, 0},
{757, 4, 249, 0},
{760, 4, 250, 0},
{763, 4, 251, 0},
{766, 4, 252, 0},
{769, 4, 253, 0},
{772, 4, 254, 0},
{775, 4, 255, 0},
{778, 4, 256, 0},
{781, 4, 257, 0},
{784, 4, 258, 0},
{787, 4, 259, 0},
{790, 4, 260, 0},
{793, 4, 261, 0},
{796, 4, 262, 0},
{799, 4, 263, 0},
{802, 4, 264, 0},
{805, 4, 265, 0},
{808, 4, 266, 0},
{811, 4, 267, 0},
{814, 4, 268, 0},
{817, 4, 269, 0},
{820, 4, 270, 0},
{823, 4, 271, 0},
{826, 4, 272, 0},
{829, 4, 273, 0},
{832, 4, 274, 0},
{835, 4, 275, 0},
{838, 4, 276, 0},
{841, 4, 277, 0},
{844, 4, 278, 0},
{847, 4, 279, 0},
{850, 4, 280, 0},
{853, 4, 281, 0},
{856, 4, 282, 0},
{859, 4, 283, 0},
{862, 4, 284, 0},
{865, 4, 285, 0},
{868, 4, 286, 0},
{871, 4, 287, 0},
{874, 4, 288, 0},
{877, 4, 289, 0},
{880, 4, 290, 0},
{883, 4, 291, 0},
{886, 4, 292, 0},
{889, 4, 293, 0},
{892, 4, 294, 0},
{895, 4, 295, 0},
{898, 4, 296, 0},
{901, 4, 297, 0},
{904, 4, 298, 0},
{907, 4, 299, 0},
{910, 4, 300, 0},
{913, 4, 301, 0},
{916, 4, 302, 0},
{919, 4, 303, 0},
{922, 4, 304, 0},
{925, 4, 305, 0},
{928, 4, 306, 0},
{931, 4, 307, 0},
{934, 4, 308, 0},
{937, 4, 309, 0},
{940, 4, 310, 0},
{943, 4, 311, 0},
{946, 4, 312, 0},
{949, 4, 313, 0},
{952, 4, 314, 0},
{955, 4, 315, 0},
{958, 4, 316, 0},
{961, 4, 317, 0},
{964, 4, 318, 0},
{967, 4, 319, 0},
{970, 4, 320, 0},
{973, 4, 321, 0},
{976, 4, 322, 0},
{979, 4, 323, 0},
{982, 4, 324, 0},
{985, 4, 325, 0},
{988, 4, 326, 0},
{991, 4, 327, 0},
{994, 4, 328, 0},
{997, 4, 329, 0},
{1000, 4, 330, 0},
{1003, 4, 331, 0},
{1006, 4, 332, 0},
{1009, 4, 333, 0},
{1012, 4, 334, 0},
{1015, 4, 335, 0},
{1018, 4, 336, 0},
{1021, 4, 337, 0},
{1024, 4, 338, 0},
{1027, 4, 339, 0},
{1030, 4, 340, 0},
{1033, 4, 341, 0},
{1036, 4, 342, 0},
{1039, 4, 343, 0},
{1042, 4, 344, 0},
{1045, 4, 345, 0},
{1048, 4, 346, 0},
{1051, 4, 347, 0},
{1054, 4, 348, 0},
{1057, 4, 349, 0},
{1060, 4, 350, 0},
{1063, 4, 351, 0},
{1066, 4, 352, 0},
{1069, 4, 353, 0},
{1072, 4, 354, 0},
{1075, 4, 355, 0},
{1078, 4, 356, 0},
{1081, 4, 357, 0},
{1084, 4, 358, 0},
{1087, 4, 359, 0},
{1090, 4, 360, 0},
{1093, 4, 361, 0},
{1096, 4, 362, 0},
{1099, 4, 363, 0},
{1102, 4, 364, 0},
{1105, 4, 365, 0},
{1108, 4, 366, 0},
{1111, 4, 367, 0},
{1114, 4, 368, 0},
{1117, 4, 369, 0},
{1120, 4, 370, 0},
{1123, 4, 371, 0},
{1126, 4, 372, 0},
{1129, 4, 373, 0},
{1132, 4, 374, 0},
{1135, 4, 375, 0},
{1138, 4, 376, 0},
{1141, 4, 377, 0},
{1144, 4, 378, 0},
{1147, 4, 379, 0},
{1150, 4, 380, 0},
{1153, 4, 381, 0},
{1156, 4, 382, 0},
{1159, 4, 383, 0},
{1162, 4, 384, 0},
{1165, 4, 385, 0},
{1168, 4, 386, 0},
{1171, 4, 387, 0},
{1174, 4, 388, 0},
{1177, 4, 389, 0},
{1180, 4, 390, 0},
{1183, 4, 391, 0},
{1186, 4, 392, 0},
{1189, 4, 393, 0},
{1192, 4, 394, 0},
{1195, 4, 395, 0},
{1198, 4, 396, 0},
{1201, 4, 397, 0},
{1204, 4, 398, 0},
{1207, 4, 399, 0},
{1210, 4, 400, 0},
{1213, 4, 401, 0},
{1216, 4, 402, 0},
{1219, 4, 403, 0},
{1222, 4, 404, 0},
{1225, 4, 405, 0},
{1228, 4, 406, 0},
{1231, 4, 407, 0},
{1234, 4, 408, 0},
{1237, 4, 409, 0},
{1240, 4, 410, 0},
{1243, 4, 411, 0},
{1246, 4, 412, 0},
{1249, 4, 413, 0},
{1252, 4, 414, 0},
{1255, 4, 415, 0},
{1258, 4, 416, 0},
{1261, 4, 417, 0},
{1264, 4, 418, 0},
{1267, 4, 419, 0},
{1270, 4, 420, 0},
{1273, 4, 421, 0},
{1276, 4, 422, 0},
{1279, 4, 423, 0},
{1282, 4, 424, 0},
{1285, 4, 425, 0},
{1288, 4, 426, 0},
{1291, 4, 427, 0},
{1294, 4, 428, 0},
{1297, 4, 429, 0},
{1300, 4, 430, 0},
{1303, 4, 431, 0},
{1306, 4, 432, 0},
{1309, 4, 433, 0},
{1312, 4, 434, 0},
{1315, 4, 435, 0},
{1318, 4, 436, 0},
{1321, 4, 437, 0},
{1324, 4, 438, 0},
{1327, 4, 439, 0},
{1330, 4, 440, 0},
{1333, 4, 441, 0},
{1336, 4, 442, 0},
{1339, 4, 443, 0},
{1342, 4, 444, 0},
{1345, 4, 445, 0},
{1348, 4, 446, 0},
{1351, 4, 447, 0},
{1354, 4, 448, 0},
{1357, 4, 449, 0},
{1360, 4, 450, 0},
{1363, 4, 451, 0},
{1366, 4, 452, 0},
{1369, 4, 453, 0},
{1372, 4, 454, 0},
{1375, 4, 455, 0},
{1378, 4, 456, 0},
{1381, 4, 457, 0},
{1384, 4, 458, 0},
{1387, 4, 459, 0},
{1390, 4, 460, 0},
{1393, 4, 461, 0},
{1396, 4, 462, 0},
{1399, 4, 463, 0},
{1402, 4, 464, 0},
{1405, 4, 465, 0},
{1408, 4, 466, 0},
{1411, 4, 467, 0},
{1414, 4, 468, 0},
{1417, 4, 469, 0},
{1420, 4, 470, 0},
{1423, 4, 471, 0},
{1426, 4, 472, 0},
{1429, 4, 473, 0},
{1432, 4, 474, 0},
{1435, 4, 475, 0},
{1438, 4, 476, 0},
{1441, 4, 477, 0},
{1444, 4, 478, 0},
{1447, 4, 479, 0},
{1450, 4, 480, 0},
{1453, 4, 481, 0},
{1456, 4, 482, 0},
{1459, 4, 483, 0},
{1462, 4, 484, 0},
{1465, 4, 485, 0},
{1468, 4, 486, 0},
{1471, 4, 487, 0},
{1474, 4, 488, 0},
{1477, 4, 489, 0},
{1480, 4, 490, 0},
{1483, 4, 491, 0},
{1486, 4, 492, 0},
{1489, 4, 493, 0},
{1492, 4, 494, 0},
{1495, 4, 495, 0},
{1498, 4, 496, 0},
{1501, 4, 497, 0},
{1504, 4, 498, 0},
{1507, 4, 499, 0},
{1510, 4, 500, 0},
{1513, 4, 501, 0},
{1516, 4, 502, 0},
{1519, 4, 503, 0},
{1522, 4, 504, 0},
{1525, 4, 505, 0},
{1528, 4, 506, 0},
{1531, 4, 507, 0},
{1534, 4, 508, 0},
{1537, 4, 509, 0},
{1540, 4, 510, 0},
{1543, 4, 511, 0},
{1546, 4, 512, 0},
{1549, 4, 513, 0},
{1552, 4, 514, 0},
{1555, 4, 515, 0},
{1558, 4, 516, 0},
{1561, 4, 517, 0},
{1564, 4, 518, 0},
{1567, 4, 519, 0},
{1570, 4, 520, 0},
{1573, 4, 521, 0},
{1576, 4, 522, 0},
{1579, 4, 523, 0},
{1582, 4, 524, 0},
{1585, 4, 525, 0},
{1588, 4, 526, 0},
{1591, 4, 527, 0},
{1594, 4, 528, 0},
{1597, 4, 529, 0},
{1600, 4, 530, 0},
{1603, 4, 531, 0},
{1606, 4, 532, 0},
{1609, 4, 533, 0},
{1612, 4, 534, 0},
{1615, 4, 535, 0},
{1618, 4, 536, 0},
{1621, 4, 537, 0},
{1624, 4, 538, 0},
{1627, 4, 539, 0},
{1630, 4, 540, 0},
{1633, 4, 541, 0},
{1636, 4, 542, 0},
{1639, 4, 543, 0},
{1642, 4, 544, 0},
{1645, 4, 545, 0},
{1648, 4, 546, 0},
{1651, 4, 547, 0},
{1654, 4, 548, 0},
{1657, 4, 549, 0},
{1660, 4, 550, 0},
{1663, 4, 551, 0},
{1666, 4, 552, 0},
{1669, 4, 553, 0},
{1672, 4, 554, 0},
{1675, 4, 555, 0},
{1678, 4, 556, 0},
{1681, 4, 557, 0},
{1684, 4, 558, 0},
{1687, 4, 559, 0},
{1690, 4, 560, 0},
{1693, 4, 561, 0},
{1696, 4, 562, 0},
{1699, 4, 563, 0},
{1702, 4, 564, 0},
{1705, 4, 565, 0},
{1708, 4, 566, 0},
{1711, 4, 567, 0},
{1714, 4, 568, 0},
{1717, 4, 569, 0},
{1720, 4, 570, 0},
{1723, 4, 571, 0},
{1726, 4, 572, 0},
{1729, 4, 573, 0},
{1732, 4, 574, 0},
{1735, 4, 575, 0},
{1738, 4, 576, 0},
{1741, 4, 577, 0},
{1744, 4, 578, 0},
{1747, 4, 579, 0},
{1750, 4, 580, 0},
{1753, 4, 581, 0},
{1756, 4, 582, 0},
{1759, 4, 583, 0},
{1762, 4, 584, 0},
{1765, 4, 585, 0},
{1768, 4, 586, 0},
{1771, 4, 587, 0},
{1774, 4, 588, 0},
{1777, 4, 589, 0},
{1780, 4, 590, 0},
{1783, 4, 591, 0},
{1786, 4, 592, 0},
{1789, 4, 593, 0},
{1792, 4, 594, 0},
{1795, 4, 595, 0},
{1798, 4, 596, 0},
{1801, 4, 597, 0},
{1804, 4, 598, 0},
{1807, 4, 599, 0},
{1810, 4, 600, 0},
{1813, 4, 601, 0},
{1816, 4, 602, 0},
{1819, 4, 603, 0},
{1822, 4, 604, 0},
{1825, 4, 605, 0},
{1828, 4, 606, 0},
{1831, 4, 607, 0},
{1834, 4, 608, 0},
{1837, 4, 609, 0},
{1840, 4, 610, 0},
{1843, 4, 611, 0},
{1846, 4, 612, 0},
{1849, 4, 613, 0},
{1852, 4, 614, 0},
{1855, 4, 615, 0},
{1858, 4, 616, 0},
{1861, 4, 617, 0},
{1864, 4, 618, 0},
{1867, 4, 619, 0},
{1870, 4, 620, 0},
{1873, 4, 621, 0},
{1876, 4, 622, 0},
{1879, 4, 623, 0},
{1882, 4, 624, 0},
{1885, 4, 625, 0},
{1888, 4, 626, 0},
{1891, 4, 627, 0},
{1894, 4, 628, 0},
{1897, 4, 629, 0},
{1900, 4, 630, 0},
{1903, 4, 631, 0},
{1906, 4, 632, 0},
{1909, 4, 633, 0},
{1912, 4, 634, 0},
{1915, 4, 635, 0},
{1918, 4, 636, 0},
{1921, 4, 637, 0},
{1924, 4, 638, 0},
{1927, 4, 639, 0},
{1930, 4, 640, 0},
{1933, 4, 641, 0},
{1936, 4, 642, 0},
{1939, 4, 643, 0},
{1942, 4, 644, 0},
{1945, 4, 645, 0},
{1948, 4, 646, 0},
{1951, 4, 647, 0},
{1954, 4, 648, 0},
{1957, 4, 649, 0},
{1960, 4, 650, 0},
{1963, 4, 651, 0},
{1966, 4, 652, 0},
{1969, 4, 653, 0},
{1972, 4, 654, 0},
{1975, 4, 655, 0},
{1978, 4, 656, 0},
{1981, 4, 657, 0},
{1984, 4, 658, 0},
{1987, 4, 659, 0},
{1990, 4, 660, 0},
{1993, 4, 661, 0},
{1996, 4, 662, 0},
{1999, 4, 663, 0},
{2002, 4, 664, 0},
{2005, 4, 665, 0},
{2008, 4, 666, 0},
{2011, 4, 667, 0},
{2014, 4, 668, 0},
{2017, 4, 669, 0},
{2020, 4, 670, 0},
{2023, 4, 671, 0},
{2026, 4, 672, 0},
{2029, 4, 673, 0},
{2032, 4, 674, 0},
{2035, 4, 675, 0},
{2038, 4, 676, 0},
{2041, 4, 677, 0},
{2044, 4, 678, 0},
{2047, 4, 679, 0},
{2050, 4, 680, 0},
{2053, 4, 681, 0},
{2056, 4, 682, 0},
{2059, 4, 683, 0},
{2062, 4, 684, 0},
{2065, 4, 685, 0},
{2068, 4, 686, 0},
{2071, 4, 687, 0},
{2074, 4, 688, 0},
{2077, 4, 689, 0},
{2080, 4, 690, 0},
{2083, 4, 691, 0},
{2086, 4, 692, 0},
{2089, 4, 693, 0},
{2092, 4, 694, 0},
{2095, 4, 695, 0},
{2098, 4, 696, 0},
{2101, 4, 697, 0},
{2104, 4, 698, 0},
{2107, 4, 699, 0},
{2110, 4, 700, 0},
{2113, 4, 701, 0},
{2116, 4, 702, 0},
{2119, 4, 703, 0},
{2122, 4, 704, 0},
{2125, 4, 705, 0},
{2128, 4, 706, 0},
{2131, 4, 707, 0},
{2134, 4, 708, 0},
{2137, 4, 709, 0},
{2140, 4, 710, 0},
{2143, 4, 711, 0},
{2146, 4, 712, 0},
{2149, 4, 713, 0},
{2152, 4, 714, 0},
{2155, 4, 715, 0},
{2158, 4, 716, 0},
{2161, 4, 717, 0},
{2164, 4, 718, 0},
{2167, 4, 719, 0},
{2170, 4, 720, 0},
{2173, 4, 721, 0},
{2176, 4, 722, 0},
{2179, 4, 723, 0},
{2182, 4, 724, 0},
{2185, 4, 725, 0},
{2188, 4, 726, 0},
{2191, 4, 727, 0},
{2194, 4, 728, 0},
{2197, 4, 729, 0},
{2200, 4, 730, 0},
{2203, 4, 731, 0},
{2206, 4, 732, 0},
{2209, 4, 733, 0},
{2212, 4, 734, 0},
{2215, 4, 735, 0},
{2218, 4, 736, 0},
{2221, 4, 737, 0},
{2224, 4, 738, 0},
{2227, 4, 739, 0},
{2230, 4, 740, 0},
{2233, 4, 741, 0},
{2236, 4, 742, 0},
{2239, 4, 743, 0},
{2242, 4, 744, 0},
{2245, 4, 745, 0},
{2248, 4, 746, 0},
{2251, 4, 747, 0},
{2254, 4, 748, 0},
{2257, 4, 749, 0},
{2260, 4, 750, 0},
{2263, 4, 751, 0},
{2266, 4, 752, 0},
{2269, 4, 753, 0},
{2272, 4, 754, 0},
{2275, 4, 755, 0},
{2278, 4, 756, 0},
{2281, 4, 757, 0},
{2284, 4, 758, 0},
{2287, 4, 759, 0},
{2290, 4, 760, 0},
{2293, 4, 761, 0},
{2296, 4, 762, 0},
{2299, 4, 763, 0},
{2302, 4, 764, 0},
{2305, 4, 765, 0},
{2308, 4, 766, 0},
{2311, 4, 767, 0},
{2314, 4, 768, 0},
{2317, 4, 769, 0},
{2320, 4, 770, 0},
{2323, 4, 771, 0},
{2326, 4, 772, 0},
{2329, 4, 773, 0},
{2332, 4, 774, 0},
{2335, 4, 775, 0},
{2338, 4, 776, 0},
{2341, 4, 777, 0},
{2344, 4, 778, 0},
{2347, 4, 779, 0},
{2350, 4, 780, 0},
{2353, 4, 781, 0},
{2356, 4, 782, 0},
{2359, 4, 783, 0},
{2362, 4, 784, 0},
{2365, 4, 785, 0},
{2368, 4, 786, 0},
{2371, 4, 787, 0},
{2374, 4, 788, 0},
{2377, 4, 789, 0},
{2380, 4, 790, 0},
{2383, 4, 791, 0},
{2386, 4, 792, 0},
{2389, 4, 793, 0},
{2392, 4, 794, 0},
{2395, 4, 795, 0},
{2398, 4, 796, 0},
{2401, 4, 797, 0},
{2404, 4, 798, 0},
{2407, 4, 799, 0},
{2410, 4, 800, 0},
{2413, 4, 801, 0},
{2416, 4, 802, 0},
{2419, 4, 803, 0},
{2422, 4, 804, 0},
{2425, 4, 805, 0},
{2428, 4, 806, 0},
{2431, 4, 807, 0},
{2434, 4, 808, 0},
{2437, 4, 809, 0},
{2440, 4, 810, 0},
{2443, 4, 811, 0},
{2446, 4, 812, 0},
{2449, 4, 813, 0},
{2452, 4, 814, 0},
{2455, 4, 815, 0},
{2458, 4, 816, 0},
{2461, 4, 817, 0},
{2464, 4, 818, 0},
{2467, 4, 819, 0},
{2470, 4, 820, 0},
{2473, 4, 821, 0},
{2476, 4, 822, 0},
{2479, 4, 823, 0},
{2482, 4, 824, 0},
{2485, 4, 825, 0},
{2488, 4, 826, 0},
{2491, 4, 827, 0},
{2494, 4, 828, 0},
{2497, 4, 829, 0},
{2500, 4, 830, 0},
{2503, 4, 831, 0},
{2506, 4, 832, 0},
{2509, 4, 833, 0},
{2512, 4, 834, 0},
{2515, 4, 835, 0},
{2518, 4, 836, 0},
{2521, 4, 837, 0},
{2524, 4, 838, 0},
{2527, 4, 839, 0},
{2530, 4, 840, 0},
{2533, 4, 841, 0},
{2536, 4, 842, 0},
{2539, 4, 843, 0},
{2542, 4, 844, 0},
{2545, 4, 845, 0},
{2548, 4, 846, 0},
{2551, 4, 847, 0},
{2554, 4, 848, 0},
{2557, 4, 849, 0},
{2560, 4, 850, 0},
{2563, 4, 851, 0},
{2566, 4, 852, 0},
{2569, 4, 853, 0},
{2572, 4, 854, 0},
{2575, 4, 855, 0},
{2578, 4, 856, 0},
{2581, 4, 857, 0},
{2584, 4, 858, 0},
{2587, 4, 859, 0},
{2590, 4, 860, 0},
{2593, 4, 861, 0},
{2596, 4, 862, 0},
{2599, 4, 863, 0},
{2602, 4, 864, 0},
{2605, 4, 865, 0},
{2608, 4, 866, 0},
{2611, 4, 867, 0},
{2614, 4, 868, 0},
{2617, 4, 869, 0},
{2620, 4, 870, 0},
{2623, 4, 871, 0},
{2626, 4, 872, 0},
{2629, 4, 873, 0},
{2632, 4, 874, 0},
{2635, 4, 875, 0},
{2638, 4, 876, 0},
{2641, 4, 877, 0},
{2644, 4, 878, 0},
{2647, 4, 879, 0},
{2650, 4, 880, 0},
{2653, 4, 881, 0},
{2656, 4, 882, 0},
{2659, 4, 883, 0},
{2662, 4, 884, 0},
{2665, 4, 885, 0},
{2668, 4, 886, 0},
{2671, 4, 887, 0},
{2674, 4, 888, 0},
{2677, 4, 889, 0},
{2680, 4, 890, 0},
{2683, 4, 891, 0},
{2686, 4, 892, 0},
{2689, 4, 893, 0},
{2692, 4, 894, 0},
{2695, 4, 895, 0},
{2698, 4, 896, 0},
{2701, 4, 897, 0},
{2704, 4, 898, 0},
{2707, 4, 899, 0},
{2710, 4, 900, 0},
{2713, 4, 901, 0},
{2716, 4, 902, 0},
{2719, 4, 903, 0},
{2722, 4, 904, 0},
{2725, 4, 905, 0},
{2728, 4, 906, 0},
{2731, 4, 907, 0},
{2734, 4, 908, 0},
{2737, 4, 909, 0},
{2740, 4, 910, 0},
{2743, 4, 911, 0},
{2746, 4, 912, 0},
{2749, 4, 913, 0},
{2752, 4, 914, 0},
{2755, 4, 915, 0},
{2758, 4, 916, 0},
{2761, 4, 917, 0},
{2764, 4, 918, 0},
{2767, 4, 919, 0},
{2770, 4, 920, 0},
{2773, 4, 921, 0},
{2776, 4, 922, 0},
{2779, 4, 923, 0},
{2782, 4, 924, 0},
{2785, 4, 925, 0},
{2788, 4, 926, 0},
{2791, 4, 927, 0},
{2794, 4, 928, 0},
{2797, 4, 929, 0},
{2800, 4, 930, 0},
{2803, 4, 931, 0},
{2806, 4, 932, 0},
{2809, 4, 933, 0},
{2812, 4, 934, 0},
{2815, 4, 935, 0},
{2818, 4, 936, 0},
{2821, 4, 937, 0},
{2824, 4, 938, 0},
{2827, 4, 939, 0},
{2830, 4, 940, 0},
{2833, 4, 941, 0},
{2836, 4, 942, 0},
{2839, 4, 943, 0},
{2842, 4, 944, 0},
{2845, 4, 945, 0},
{2848, 4, 946, 0},
{2851, 4, 947, 0},
{2854, 4, 948, 0},
{2857, 4, 949, 0},
{2860, 4, 950, 0},
{2863, 4, 951, 0},
{2866, 4, 952, 0},
{2869, 4, 953, 0},
{2872, 4, 954, 0},
{2875, 4, 955, 0},
{2878, 4, 956, 0},
{2881, 4, 957, 0},
{2884, 4, 958, 0},
{2887, 4, 959, 0},
{2890, 4, 960, 0},
{2893, 4, 961, 0},
{2896, 4, 962, 0},
{2899, 4, 963, 0},
{2902, 4, 964, 0},
{2905, 4, 965, 0},
{2908, 4, 966, 0},
{2911, 4, 967, 0},
{2914, 4, 968, 0},
{2917, 4, 969, 0},
{2920, 4, 970, 0},
{2923, 4, 971, 0},
{2926, 4, 972, 0},
{2929, 4, 973, 0},
{2932, 4, 974, 0},
{2935, 4, 975, 0},
{2938, 4, 976, 0},
{2941, 4, 977, 0},
{2944, 4, 978, 0},
{2947, 4, 979, 0},
{2950, 4, 980, 0},
{2953, 4, 981, 0},
{2956, 4, 982, 0},
{2959, 4, 983, 0},
{2962, 4, 984, 0},
{2965, 4, 985, 0},
{2968, 4, 986, 0},
{2971, 4, 987, 0},
{2974, 4, 988, 0},
{2977, 4, 989, 0},
{2980, 4, 990, 0},
{2983, 4, 991, 0},
{2986, 4, 992, 0}
};

const int MSD::IrreduciblePartitionIndexToTypeMapSize = 996;

const int MSD::IrreduciblePartitionCount = 996;

const int MSD::ExternalToInternalSiteIdMap[] = 
{
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988};
const int MSD::ExternalToInternalSiteIdMapSize = 2989;

const int MSD::InternalToExternalSiteIdMap[] = 
{
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988};
const int MSD::InternalToExternalSiteIdMapSize = 2989;



const int MSD::Rigid2Sites[] = {
4,5};

const UDF_Binding::ShakeGroup2_Params MSD::Rigid2Params[] = {
{{ 1.0800}} };

const int MSD::Rigid3Sites[] = { -1 }; 


const UDF_Binding::ShakeGroup3_Params MSD::Rigid3Params[] = { { {1.0} }  }; 


const int MSD::Rigid4Sites[] = {
0,1,2,3,
6,7,8,9};

const UDF_Binding::ShakeGroup4_Params MSD::Rigid4Params[] = {
{{ 1.0400,1.0400,1.0400}} ,
{{ 1.0400,1.0400,1.0400}} };/*
These are the sites.
*/
const int MSD::ImproperDihedralForce_sitesSiteTupleList[] = {
10,4,12,11};

#define NUMBER_OF_ImproperDihedralForce_sites_SITE_TUPLES 1

/*
The parameters are in the order of the structs above.
*/
const UDF_Binding::ImproperDihedralForce_Params MSD::ImproperDihedralForce_paramsParamTupleList[] = {
{ 96.0000 , (0.0000*Math::Deg2Rad) } };

#define NUMBER_OF_ImproperDihedralForce_params_PARAM_TUPLES 1

/*
These are the sites.
*/
const int MSD::StdHarmonicAngleForce_sitesSiteTupleList[] = {
1,0,2,
1,0,3,
1,0,4,
2,0,3,
2,0,4,
3,0,4,
4,6,7,
4,6,8,
4,6,9,
6,4,10,
0,4,6,
0,4,10,
0,4,5,
4,10,12,
4,10,11,
5,4,6,
5,4,10,
7,6,8,
7,6,9,
8,6,9,
11,10,12};

#define NUMBER_OF_StdHarmonicAngleForce_sites_SITE_TUPLES 21

/*
The parameters are in the order of the structs above.
*/
const UDF_Binding::StdHarmonicAngleForce_Params MSD::StdHarmonicAngleForce_paramsParamTupleList[] = {
{ 44.000 , (109.5000*Math::Deg2Rad) },
{ 44.000 , (109.5000*Math::Deg2Rad) },
{ 30.000 , (109.50*Math::Deg2Rad) },
{ 44.000 , (109.5000*Math::Deg2Rad) },
{ 30.000 , (109.50*Math::Deg2Rad) },
{ 30.000 , (109.50*Math::Deg2Rad) },
{ 33.430 , (110.10*Math::Deg2Rad) },
{ 33.430 , (110.10*Math::Deg2Rad) },
{ 33.430 , (110.10*Math::Deg2Rad) },
{ 52.000 , (108.0000*Math::Deg2Rad) },
{ 67.700 , (110.0000*Math::Deg2Rad) },
{ 43.700 , (110.0000*Math::Deg2Rad) },
{ 51.500 , (107.5000*Math::Deg2Rad) },
{ 40.000 , (118.00*Math::Deg2Rad) },
{ 40.000 , (118.00*Math::Deg2Rad) },
{ 35.000 , (111.0000*Math::Deg2Rad) },
{ 50.000 , (109.5000*Math::Deg2Rad) },
{ 35.500 , (108.40*Math::Deg2Rad) },
{ 35.500 , (108.40*Math::Deg2Rad) },
{ 35.500 , (108.40*Math::Deg2Rad) },
{ 100.000 , (124.00*Math::Deg2Rad) } };

#define NUMBER_OF_StdHarmonicAngleForce_params_PARAM_TUPLES 21

/*
These are the sites.
*/
const int MSD::StdHarmonicBondForce_sitesSiteTupleList[] = {
6,4,
0,4,
10,4,
10,12,
10,11};

#define NUMBER_OF_StdHarmonicBondForce_sites_SITE_TUPLES 5

/*
The parameters are in the order of the structs above.
*/
const UDF_Binding::StdHarmonicBondForce_Params MSD::StdHarmonicBondForce_paramsParamTupleList[] = {
{ 222.500 , 1.5380 },
{ 200.000 , 1.4800 },
{ 200.000 , 1.5220 },
{ 525.000 , 1.2600 },
{ 525.000 , 1.2600 } };

#define NUMBER_OF_StdHarmonicBondForce_params_PARAM_TUPLES 5

/*
These are the sites.
*/
const int MSD::SwopeTorsionForce_sitesSiteTupleList[] = {
0,4,6,7,
0,4,6,8,
0,4,6,9,
0,4,10,11,
0,4,10,12,
1,0,4,5,
1,0,4,6,
1,0,4,10,
2,0,4,5,
2,0,4,6,
2,0,4,10,
3,0,4,5,
3,0,4,6,
3,0,4,10,
5,4,6,7,
5,4,6,8,
5,4,6,9,
5,4,10,11,
5,4,10,12,
6,4,10,11,
6,4,10,12,
7,6,4,10,
8,6,4,10,
9,6,4,10};

#define NUMBER_OF_SwopeTorsionForce_sites_SITE_TUPLES 24

/*
The parameters are in the order of the structs above.
*/
const UDF_Binding::SwopeTorsionForce_Params MSD::SwopeTorsionForce_paramsParamTupleList[] = {
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(180.00*Math::Deg2Rad) , 3.2000 , sin(180.00*Math::Deg2Rad) , 2 },
{ cos(180.00*Math::Deg2Rad) , 3.2000 , sin(180.00*Math::Deg2Rad) , 2 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.1000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(180.00*Math::Deg2Rad) , 0.0500 , sin(180.00*Math::Deg2Rad) , 6 },
{ cos(180.00*Math::Deg2Rad) , 0.0500 , sin(180.00*Math::Deg2Rad) , 6 },
{ cos(180.00*Math::Deg2Rad) , 0.0500 , sin(180.00*Math::Deg2Rad) , 6 },
{ cos(180.00*Math::Deg2Rad) , 0.0500 , sin(180.00*Math::Deg2Rad) , 6 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 },
{ cos(0.00*Math::Deg2Rad) , 0.2000 , sin(0.00*Math::Deg2Rad) , 3 } };

#define NUMBER_OF_SwopeTorsionForce_params_PARAM_TUPLES 24

/*
These are the sites.
*/
const int MSD::UreyBradleyForce_sitesSiteTupleList[] = {
1,4,
2,4,
3,4,
4,7,
4,8,
4,9,
4,12,
4,11,
7,8,
7,9,
8,9,
11,12};

#define NUMBER_OF_UreyBradleyForce_sites_SITE_TUPLES 12

/*
The parameters are in the order of the structs above.
*/
const UDF_Binding::UreyBradleyForce_Params MSD::UreyBradleyForce_paramsParamTupleList[] = {
{ 20.00 , 2.07400 },
{ 20.00 , 2.07400 },
{ 20.00 , 2.07400 },
{ 22.53 , 2.17900 },
{ 22.53 , 2.17900 },
{ 22.53 , 2.17900 },
{ 50.00 , 2.38800 },
{ 50.00 , 2.38800 },
{ 5.40 , 1.80200 },
{ 5.40 , 1.80200 },
{ 5.40 , 1.80200 },
{ 70.00 , 2.22500 } };

#define NUMBER_OF_UreyBradleyForce_params_PARAM_TUPLES 12

const double MSD::TimeConversionFactorMsd = TimeConversionFactor;

const double MSD::ShakeTolerance = 1.0E-10;

const double MSD::EwaldAlpha = 0.35;

double MSD::VelocityResampleTargetTemperature = 300;

double MSD::PressureControlPistonInitialVelocity = 0.0;

int MSD::NumberOfOuterTimeSteps = 1000;

int MSD::VelocityResampleRandomSeed = 51579;

double MSD::PressureControlPistonMass = 0.0004;

double MSD::PressureControlTarget = 1.0;

const double MSD::RattleTolerance = 1.0E-10;

const double MSD::Lambda = 0.0;

const int MSD::P3MEdiffOrder = PreMSD::ANALYTICAL;

const double MSD::OuterTimeStepInPicoSeconds = 0.001;

int MSD::SnapshotPeriodInOTS = 1000;

const int MSD::ShakeMaxIterations = 1000;

const double MSD::LeknerEpsilon = 0.0;

const int MSD::DoOuter = 1;

int MSD::EmitEnergyTimeStepModulo = 1;

int MSD::VelocityResamplePeriodInOTS = 10;

const double MSD::InnerTimeStepInPicoSeconds = -1.0;

const int MSD::EwaldKmax = 10;

const int MSD::P3MEchargeAssignment = 4;

const double MSD::ExternalPressure = 1.0;

BoundingBox MSD::BoundingBoxDef = { -15.5 , -15.5 , -15.5 , 15.5 , 15.5 , 15.5 };

const int MSD::RattleMaxIterations = 1000;

const int MSD::NumberOfInnerTimeSteps = -1;

const int MSD::SimTicksAtRespaLevel[] = {
1};

const int MSD::SimTicksPerTimeStep = 1;

const int MSD::RespaLevelOfFirstShell=0;
const int MSD::RespaLevelByUDFCode[] = {
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
};
const int MSD::NumberOfRespaLevels = 1;

const int MSD::DoNonBondedAtRespaLevel[] = {
1
};
const double MSD::SwitchLowerCutoffForShell[] = {
8.0
};
const double MSD::SwitchDeltaForShell[] = {
1.0
};
const double MSD::ConvertedInnerTimeStep = 0.0010/MSD::TimeConversionFactorMsd ;

const double MSD::IntegratorLevelConvertedTimeDelta[] = {
MSD::ConvertedInnerTimeStep * 1
};
#endif

inline int MSD::GetNumberOfSimTicks()
{
int simTicks = ( NumberOfOuterTimeSteps * 1 );
return simTicks;
}

#define MSD_GetNumberOfSimTicks_Method
#ifndef MSD_COMPILE_CODE_ONLY

/*
Indexed by site type  = { mass, halfInverseMass, charge, lj_type, lj_14_type };
*/

const SiteInfo MSD::SiteInformation[] = 
{
{ 12.0110 , 1.0/(2.0 * 12.0110) , (-.270000*ChargeConversion) },
{ 12.0110 , 1.0/(2.0 * 12.0110) , (.210000*ChargeConversion) },
{ 1.00800 , 1.0/(2.0 * 1.00800) , (.100000*ChargeConversion) },
{ 1.00800 , 1.0/(2.0 * 1.00800) , (.900000E-01*ChargeConversion) },
{ 1.00800 , 1.0/(2.0 * 1.00800) , (.330000*ChargeConversion) },
{ 12.0110 , 1.0/(2.0 * 12.0110) , (.340000*ChargeConversion) },
{ 15.9990 , 1.0/(2.0 * 15.9990) , (-.670000*ChargeConversion) },
{ 14.0070 , 1.0/(2.0 * 14.0070) , (-.300000*ChargeConversion) },
{ 1.00800 , 1.0/(2.0 * 1.00800) , 0.4170 * ChargeConversion },
{ 15.9994 , 1.0/(2.0 * 15.9994) , -0.8340 * ChargeConversion }
};
const int MSD::SiteInformationSize = 10;


const int MSD::Pair14SiteList[] = 
{
0 , 7,
0 , 8,
0 , 9,
0 , 11,
0 , 12,
1 , 5,
1 , 6,
1 , 10,
2 , 5,
2 , 6,
2 , 10,
3 , 5,
3 , 6,
3 , 10,
5 , 7,
5 , 8,
5 , 9,
5 , 11,
5 , 12,
6 , 11,
6 , 12,
7 , 10,
8 , 10,
9 , 10
};

const int MSD::Pair14SiteListSize = 24;

const UDF_Binding::Coulomb14_Params MSD::Charge14PairTable[] = 
{ 
{ (-.300000*ChargeConversion) * (.900000E-01*ChargeConversion) * charge14scale },
{ (-.300000*ChargeConversion) * (.900000E-01*ChargeConversion) * charge14scale },
{ (-.300000*ChargeConversion) * (.900000E-01*ChargeConversion) * charge14scale },
{ (-.300000*ChargeConversion) * (-.670000*ChargeConversion) * charge14scale },
{ (-.300000*ChargeConversion) * (-.670000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (.100000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (-.270000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (.340000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (.100000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (-.270000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (.340000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (.100000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (-.270000*ChargeConversion) * charge14scale },
{ (.330000*ChargeConversion) * (.340000*ChargeConversion) * charge14scale },
{ (.100000*ChargeConversion) * (.900000E-01*ChargeConversion) * charge14scale },
{ (.100000*ChargeConversion) * (.900000E-01*ChargeConversion) * charge14scale },
{ (.100000*ChargeConversion) * (.900000E-01*ChargeConversion) * charge14scale },
{ (.100000*ChargeConversion) * (-.670000*ChargeConversion) * charge14scale },
{ (.100000*ChargeConversion) * (-.670000*ChargeConversion) * charge14scale },
{ (-.270000*ChargeConversion) * (-.670000*ChargeConversion) * charge14scale },
{ (-.270000*ChargeConversion) * (-.670000*ChargeConversion) * charge14scale },
{ (.900000E-01*ChargeConversion) * (.340000*ChargeConversion) * charge14scale },
{ (.900000E-01*ChargeConversion) * (.340000*ChargeConversion) * charge14scale },
{ (.900000E-01*ChargeConversion) * (.340000*ChargeConversion) * charge14scale }
};

const int MSD::Charge14PairTableSize = 24;

const UDF_Binding::LennardJonesForce_Params MSD::LJ14PairTable[] = 
{ 
{ +0.010000 , 2*1.900000 },
{ +0.010000 , 2*1.900000 },
{ +0.022000 , 2*1.320000 },
{ +0.022000 , 2*1.320000 },
{ +0.046000 , 2*0.224500 },
{ +0.070000 , 2*2.000000 },
{ +0.120000 , 2*1.700000 },
{ +0.200000 , 2*1.850000 },
{ 0.0 , 0.0 },
{ 0.0 , 0.0 }};

const int MSD::LJ14PairTableSize = 10;

/* 
UdfCode, size of tupleList, siteTupleListPtr, paramTupleListPtr, CombinationRule, ToCombine
*/

UdfInvocation MSD::UdfInvocationTable[] = 
{
{ 7 , 1 , (int*) ImproperDihedralForce_sitesSiteTupleList, (void*) ImproperDihedralForce_paramsParamTupleList,  MSD::NORM,  -1  },
{ 2 , 21 , (int*) StdHarmonicAngleForce_sitesSiteTupleList, (void*) StdHarmonicAngleForce_paramsParamTupleList,  MSD::NORM,  -1  },
{ 1 , 5 , (int*) StdHarmonicBondForce_sitesSiteTupleList, (void*) StdHarmonicBondForce_paramsParamTupleList,  MSD::NORM,  -1  },
{ 3 , 24 , (int*) SwopeTorsionForce_sitesSiteTupleList, (void*) SwopeTorsionForce_paramsParamTupleList,  MSD::NORM,  -1  },
{ 4 , 12 , (int*) UreyBradleyForce_sitesSiteTupleList, (void*) UreyBradleyForce_paramsParamTupleList,  MSD::NORM,  -1  },
{ 36 , 24 , (int*)Pair14SiteList , (void*)Charge14PairTable, MSD::NORM, -1 },
{ 8 , 24 , (int*)Pair14SiteList , (void*)LJ14PairTable, MSD::COMB, 32 }
};

const int MSD::UdfInvocationTableSize = 7;

const UDF_Binding::NSQCoulomb_Params MSD::ChargeNsqParams[] = 
{
{ (.210000*ChargeConversion) },
{ (.100000*ChargeConversion) },
{ (.900000E-01*ChargeConversion) },
{ (.330000*ChargeConversion) },
{ (.340000*ChargeConversion) },
{ (-.270000*ChargeConversion) },
{ (-.670000*ChargeConversion) },
{ (-.300000*ChargeConversion) },
{ 0.4170 * ChargeConversion },
{ -0.8340 * ChargeConversion }
};
const int MSD::NumberOfNsqSiteTypes = 10;

const UDF_Binding::NSQLennardJones_Params MSD::LJNsqParams[] = 
{
{ +0.020000 , 2*2.275000 },
{ +0.022000 , 2*1.320000 },
{ +0.022000 , 2*1.320000 },
{ +0.046000 , 2*0.224500 },
{ +0.070000 , 2*2.000000 },
{ +0.080000 , 2*2.060000 },
{ +0.120000 , 2*1.700000 },
{ +0.200000 , 2*1.850000 },
{ 0.0 , 0.0 * SciConst::SixthRootOfTwo },
{ 0.1521 , 3.1506 * SciConst::SixthRootOfTwo }
};
const int MSD::NsqSiteIDtoSiteTypeMap[] = 
{
7,
3,
3,
3,
0,
1,
5,
2,
2,
2,
4,
6,
6,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8
};
const int MSD::NsqSiteIDtoSiteTypeMapSize = 2989;

const int MSD::ExclusionList1_2_3_4[] = 
{
0 , 1,
0 , 2,
0 , 3,
0 , 4,
0 , 5,
0 , 6,
0 , 7,
0 , 8,
0 , 9,
0 , 10,
0 , 11,
0 , 12,
1 , 2,
1 , 3,
1 , 4,
1 , 5,
1 , 6,
1 , 10,
2 , 3,
2 , 4,
2 , 5,
2 , 6,
2 , 10,
3 , 4,
3 , 5,
3 , 6,
3 , 10,
4 , 5,
4 , 6,
4 , 7,
4 , 8,
4 , 9,
4 , 10,
4 , 11,
4 , 12,
5 , 6,
5 , 7,
5 , 8,
5 , 9,
5 , 10,
5 , 11,
5 , 12,
6 , 7,
6 , 8,
6 , 9,
6 , 10,
6 , 11,
6 , 12,
7 , 8,
7 , 9,
7 , 10,
8 , 9,
8 , 10,
9 , 10,
10 , 11,
10 , 12,
11 , 12,
13 , 14,
13 , 15,
14 , 15,
16 , 17,
16 , 18,
17 , 18,
19 , 20,
19 , 21,
20 , 21,
22 , 23,
22 , 24,
23 , 24,
25 , 26,
25 , 27,
26 , 27,
28 , 29,
28 , 30,
29 , 30,
31 , 32,
31 , 33,
32 , 33,
34 , 35,
34 , 36,
35 , 36,
37 , 38,
37 , 39,
38 , 39,
40 , 41,
40 , 42,
41 , 42,
43 , 44,
43 , 45,
44 , 45,
46 , 47,
46 , 48,
47 , 48,
49 , 50,
49 , 51,
50 , 51,
52 , 53,
52 , 54,
53 , 54,
55 , 56,
55 , 57,
56 , 57,
58 , 59,
58 , 60,
59 , 60,
61 , 62,
61 , 63,
62 , 63,
64 , 65,
64 , 66,
65 , 66,
67 , 68,
67 , 69,
68 , 69,
70 , 71,
70 , 72,
71 , 72,
73 , 74,
73 , 75,
74 , 75,
76 , 77,
76 , 78,
77 , 78,
79 , 80,
79 , 81,
80 , 81,
82 , 83,
82 , 84,
83 , 84,
85 , 86,
85 , 87,
86 , 87,
88 , 89,
88 , 90,
89 , 90,
91 , 92,
91 , 93,
92 , 93,
94 , 95,
94 , 96,
95 , 96,
97 , 98,
97 , 99,
98 , 99,
100 , 101,
100 , 102,
101 , 102,
103 , 104,
103 , 105,
104 , 105,
106 , 107,
106 , 108,
107 , 108,
109 , 110,
109 , 111,
110 , 111,
112 , 113,
112 , 114,
113 , 114,
115 , 116,
115 , 117,
116 , 117,
118 , 119,
118 , 120,
119 , 120,
121 , 122,
121 , 123,
122 , 123,
124 , 125,
124 , 126,
125 , 126,
127 , 128,
127 , 129,
128 , 129,
130 , 131,
130 , 132,
131 , 132,
133 , 134,
133 , 135,
134 , 135,
136 , 137,
136 , 138,
137 , 138,
139 , 140,
139 , 141,
140 , 141,
142 , 143,
142 , 144,
143 , 144,
145 , 146,
145 , 147,
146 , 147,
148 , 149,
148 , 150,
149 , 150,
151 , 152,
151 , 153,
152 , 153,
154 , 155,
154 , 156,
155 , 156,
157 , 158,
157 , 159,
158 , 159,
160 , 161,
160 , 162,
161 , 162,
163 , 164,
163 , 165,
164 , 165,
166 , 167,
166 , 168,
167 , 168,
169 , 170,
169 , 171,
170 , 171,
172 , 173,
172 , 174,
173 , 174,
175 , 176,
175 , 177,
176 , 177,
178 , 179,
178 , 180,
179 , 180,
181 , 182,
181 , 183,
182 , 183,
184 , 185,
184 , 186,
185 , 186,
187 , 188,
187 , 189,
188 , 189,
190 , 191,
190 , 192,
191 , 192,
193 , 194,
193 , 195,
194 , 195,
196 , 197,
196 , 198,
197 , 198,
199 , 200,
199 , 201,
200 , 201,
202 , 203,
202 , 204,
203 , 204,
205 , 206,
205 , 207,
206 , 207,
208 , 209,
208 , 210,
209 , 210,
211 , 212,
211 , 213,
212 , 213,
214 , 215,
214 , 216,
215 , 216,
217 , 218,
217 , 219,
218 , 219,
220 , 221,
220 , 222,
221 , 222,
223 , 224,
223 , 225,
224 , 225,
226 , 227,
226 , 228,
227 , 228,
229 , 230,
229 , 231,
230 , 231,
232 , 233,
232 , 234,
233 , 234,
235 , 236,
235 , 237,
236 , 237,
238 , 239,
238 , 240,
239 , 240,
241 , 242,
241 , 243,
242 , 243,
244 , 245,
244 , 246,
245 , 246,
247 , 248,
247 , 249,
248 , 249,
250 , 251,
250 , 252,
251 , 252,
253 , 254,
253 , 255,
254 , 255,
256 , 257,
256 , 258,
257 , 258,
259 , 260,
259 , 261,
260 , 261,
262 , 263,
262 , 264,
263 , 264,
265 , 266,
265 , 267,
266 , 267,
268 , 269,
268 , 270,
269 , 270,
271 , 272,
271 , 273,
272 , 273,
274 , 275,
274 , 276,
275 , 276,
277 , 278,
277 , 279,
278 , 279,
280 , 281,
280 , 282,
281 , 282,
283 , 284,
283 , 285,
284 , 285,
286 , 287,
286 , 288,
287 , 288,
289 , 290,
289 , 291,
290 , 291,
292 , 293,
292 , 294,
293 , 294,
295 , 296,
295 , 297,
296 , 297,
298 , 299,
298 , 300,
299 , 300,
301 , 302,
301 , 303,
302 , 303,
304 , 305,
304 , 306,
305 , 306,
307 , 308,
307 , 309,
308 , 309,
310 , 311,
310 , 312,
311 , 312,
313 , 314,
313 , 315,
314 , 315,
316 , 317,
316 , 318,
317 , 318,
319 , 320,
319 , 321,
320 , 321,
322 , 323,
322 , 324,
323 , 324,
325 , 326,
325 , 327,
326 , 327,
328 , 329,
328 , 330,
329 , 330,
331 , 332,
331 , 333,
332 , 333,
334 , 335,
334 , 336,
335 , 336,
337 , 338,
337 , 339,
338 , 339,
340 , 341,
340 , 342,
341 , 342,
343 , 344,
343 , 345,
344 , 345,
346 , 347,
346 , 348,
347 , 348,
349 , 350,
349 , 351,
350 , 351,
352 , 353,
352 , 354,
353 , 354,
355 , 356,
355 , 357,
356 , 357,
358 , 359,
358 , 360,
359 , 360,
361 , 362,
361 , 363,
362 , 363,
364 , 365,
364 , 366,
365 , 366,
367 , 368,
367 , 369,
368 , 369,
370 , 371,
370 , 372,
371 , 372,
373 , 374,
373 , 375,
374 , 375,
376 , 377,
376 , 378,
377 , 378,
379 , 380,
379 , 381,
380 , 381,
382 , 383,
382 , 384,
383 , 384,
385 , 386,
385 , 387,
386 , 387,
388 , 389,
388 , 390,
389 , 390,
391 , 392,
391 , 393,
392 , 393,
394 , 395,
394 , 396,
395 , 396,
397 , 398,
397 , 399,
398 , 399,
400 , 401,
400 , 402,
401 , 402,
403 , 404,
403 , 405,
404 , 405,
406 , 407,
406 , 408,
407 , 408,
409 , 410,
409 , 411,
410 , 411,
412 , 413,
412 , 414,
413 , 414,
415 , 416,
415 , 417,
416 , 417,
418 , 419,
418 , 420,
419 , 420,
421 , 422,
421 , 423,
422 , 423,
424 , 425,
424 , 426,
425 , 426,
427 , 428,
427 , 429,
428 , 429,
430 , 431,
430 , 432,
431 , 432,
433 , 434,
433 , 435,
434 , 435,
436 , 437,
436 , 438,
437 , 438,
439 , 440,
439 , 441,
440 , 441,
442 , 443,
442 , 444,
443 , 444,
445 , 446,
445 , 447,
446 , 447,
448 , 449,
448 , 450,
449 , 450,
451 , 452,
451 , 453,
452 , 453,
454 , 455,
454 , 456,
455 , 456,
457 , 458,
457 , 459,
458 , 459,
460 , 461,
460 , 462,
461 , 462,
463 , 464,
463 , 465,
464 , 465,
466 , 467,
466 , 468,
467 , 468,
469 , 470,
469 , 471,
470 , 471,
472 , 473,
472 , 474,
473 , 474,
475 , 476,
475 , 477,
476 , 477,
478 , 479,
478 , 480,
479 , 480,
481 , 482,
481 , 483,
482 , 483,
484 , 485,
484 , 486,
485 , 486,
487 , 488,
487 , 489,
488 , 489,
490 , 491,
490 , 492,
491 , 492,
493 , 494,
493 , 495,
494 , 495,
496 , 497,
496 , 498,
497 , 498,
499 , 500,
499 , 501,
500 , 501,
502 , 503,
502 , 504,
503 , 504,
505 , 506,
505 , 507,
506 , 507,
508 , 509,
508 , 510,
509 , 510,
511 , 512,
511 , 513,
512 , 513,
514 , 515,
514 , 516,
515 , 516,
517 , 518,
517 , 519,
518 , 519,
520 , 521,
520 , 522,
521 , 522,
523 , 524,
523 , 525,
524 , 525,
526 , 527,
526 , 528,
527 , 528,
529 , 530,
529 , 531,
530 , 531,
532 , 533,
532 , 534,
533 , 534,
535 , 536,
535 , 537,
536 , 537,
538 , 539,
538 , 540,
539 , 540,
541 , 542,
541 , 543,
542 , 543,
544 , 545,
544 , 546,
545 , 546,
547 , 548,
547 , 549,
548 , 549,
550 , 551,
550 , 552,
551 , 552,
553 , 554,
553 , 555,
554 , 555,
556 , 557,
556 , 558,
557 , 558,
559 , 560,
559 , 561,
560 , 561,
562 , 563,
562 , 564,
563 , 564,
565 , 566,
565 , 567,
566 , 567,
568 , 569,
568 , 570,
569 , 570,
571 , 572,
571 , 573,
572 , 573,
574 , 575,
574 , 576,
575 , 576,
577 , 578,
577 , 579,
578 , 579,
580 , 581,
580 , 582,
581 , 582,
583 , 584,
583 , 585,
584 , 585,
586 , 587,
586 , 588,
587 , 588,
589 , 590,
589 , 591,
590 , 591,
592 , 593,
592 , 594,
593 , 594,
595 , 596,
595 , 597,
596 , 597,
598 , 599,
598 , 600,
599 , 600,
601 , 602,
601 , 603,
602 , 603,
604 , 605,
604 , 606,
605 , 606,
607 , 608,
607 , 609,
608 , 609,
610 , 611,
610 , 612,
611 , 612,
613 , 614,
613 , 615,
614 , 615,
616 , 617,
616 , 618,
617 , 618,
619 , 620,
619 , 621,
620 , 621,
622 , 623,
622 , 624,
623 , 624,
625 , 626,
625 , 627,
626 , 627,
628 , 629,
628 , 630,
629 , 630,
631 , 632,
631 , 633,
632 , 633,
634 , 635,
634 , 636,
635 , 636,
637 , 638,
637 , 639,
638 , 639,
640 , 641,
640 , 642,
641 , 642,
643 , 644,
643 , 645,
644 , 645,
646 , 647,
646 , 648,
647 , 648,
649 , 650,
649 , 651,
650 , 651,
652 , 653,
652 , 654,
653 , 654,
655 , 656,
655 , 657,
656 , 657,
658 , 659,
658 , 660,
659 , 660,
661 , 662,
661 , 663,
662 , 663,
664 , 665,
664 , 666,
665 , 666,
667 , 668,
667 , 669,
668 , 669,
670 , 671,
670 , 672,
671 , 672,
673 , 674,
673 , 675,
674 , 675,
676 , 677,
676 , 678,
677 , 678,
679 , 680,
679 , 681,
680 , 681,
682 , 683,
682 , 684,
683 , 684,
685 , 686,
685 , 687,
686 , 687,
688 , 689,
688 , 690,
689 , 690,
691 , 692,
691 , 693,
692 , 693,
694 , 695,
694 , 696,
695 , 696,
697 , 698,
697 , 699,
698 , 699,
700 , 701,
700 , 702,
701 , 702,
703 , 704,
703 , 705,
704 , 705,
706 , 707,
706 , 708,
707 , 708,
709 , 710,
709 , 711,
710 , 711,
712 , 713,
712 , 714,
713 , 714,
715 , 716,
715 , 717,
716 , 717,
718 , 719,
718 , 720,
719 , 720,
721 , 722,
721 , 723,
722 , 723,
724 , 725,
724 , 726,
725 , 726,
727 , 728,
727 , 729,
728 , 729,
730 , 731,
730 , 732,
731 , 732,
733 , 734,
733 , 735,
734 , 735,
736 , 737,
736 , 738,
737 , 738,
739 , 740,
739 , 741,
740 , 741,
742 , 743,
742 , 744,
743 , 744,
745 , 746,
745 , 747,
746 , 747,
748 , 749,
748 , 750,
749 , 750,
751 , 752,
751 , 753,
752 , 753,
754 , 755,
754 , 756,
755 , 756,
757 , 758,
757 , 759,
758 , 759,
760 , 761,
760 , 762,
761 , 762,
763 , 764,
763 , 765,
764 , 765,
766 , 767,
766 , 768,
767 , 768,
769 , 770,
769 , 771,
770 , 771,
772 , 773,
772 , 774,
773 , 774,
775 , 776,
775 , 777,
776 , 777,
778 , 779,
778 , 780,
779 , 780,
781 , 782,
781 , 783,
782 , 783,
784 , 785,
784 , 786,
785 , 786,
787 , 788,
787 , 789,
788 , 789,
790 , 791,
790 , 792,
791 , 792,
793 , 794,
793 , 795,
794 , 795,
796 , 797,
796 , 798,
797 , 798,
799 , 800,
799 , 801,
800 , 801,
802 , 803,
802 , 804,
803 , 804,
805 , 806,
805 , 807,
806 , 807,
808 , 809,
808 , 810,
809 , 810,
811 , 812,
811 , 813,
812 , 813,
814 , 815,
814 , 816,
815 , 816,
817 , 818,
817 , 819,
818 , 819,
820 , 821,
820 , 822,
821 , 822,
823 , 824,
823 , 825,
824 , 825,
826 , 827,
826 , 828,
827 , 828,
829 , 830,
829 , 831,
830 , 831,
832 , 833,
832 , 834,
833 , 834,
835 , 836,
835 , 837,
836 , 837,
838 , 839,
838 , 840,
839 , 840,
841 , 842,
841 , 843,
842 , 843,
844 , 845,
844 , 846,
845 , 846,
847 , 848,
847 , 849,
848 , 849,
850 , 851,
850 , 852,
851 , 852,
853 , 854,
853 , 855,
854 , 855,
856 , 857,
856 , 858,
857 , 858,
859 , 860,
859 , 861,
860 , 861,
862 , 863,
862 , 864,
863 , 864,
865 , 866,
865 , 867,
866 , 867,
868 , 869,
868 , 870,
869 , 870,
871 , 872,
871 , 873,
872 , 873,
874 , 875,
874 , 876,
875 , 876,
877 , 878,
877 , 879,
878 , 879,
880 , 881,
880 , 882,
881 , 882,
883 , 884,
883 , 885,
884 , 885,
886 , 887,
886 , 888,
887 , 888,
889 , 890,
889 , 891,
890 , 891,
892 , 893,
892 , 894,
893 , 894,
895 , 896,
895 , 897,
896 , 897,
898 , 899,
898 , 900,
899 , 900,
901 , 902,
901 , 903,
902 , 903,
904 , 905,
904 , 906,
905 , 906,
907 , 908,
907 , 909,
908 , 909,
910 , 911,
910 , 912,
911 , 912,
913 , 914,
913 , 915,
914 , 915,
916 , 917,
916 , 918,
917 , 918,
919 , 920,
919 , 921,
920 , 921,
922 , 923,
922 , 924,
923 , 924,
925 , 926,
925 , 927,
926 , 927,
928 , 929,
928 , 930,
929 , 930,
931 , 932,
931 , 933,
932 , 933,
934 , 935,
934 , 936,
935 , 936,
937 , 938,
937 , 939,
938 , 939,
940 , 941,
940 , 942,
941 , 942,
943 , 944,
943 , 945,
944 , 945,
946 , 947,
946 , 948,
947 , 948,
949 , 950,
949 , 951,
950 , 951,
952 , 953,
952 , 954,
953 , 954,
955 , 956,
955 , 957,
956 , 957,
958 , 959,
958 , 960,
959 , 960,
961 , 962,
961 , 963,
962 , 963,
964 , 965,
964 , 966,
965 , 966,
967 , 968,
967 , 969,
968 , 969,
970 , 971,
970 , 972,
971 , 972,
973 , 974,
973 , 975,
974 , 975,
976 , 977,
976 , 978,
977 , 978,
979 , 980,
979 , 981,
980 , 981,
982 , 983,
982 , 984,
983 , 984,
985 , 986,
985 , 987,
986 , 987,
988 , 989,
988 , 990,
989 , 990,
991 , 992,
991 , 993,
992 , 993,
994 , 995,
994 , 996,
995 , 996,
997 , 998,
997 , 999,
998 , 999,
1000 , 1001,
1000 , 1002,
1001 , 1002,
1003 , 1004,
1003 , 1005,
1004 , 1005,
1006 , 1007,
1006 , 1008,
1007 , 1008,
1009 , 1010,
1009 , 1011,
1010 , 1011,
1012 , 1013,
1012 , 1014,
1013 , 1014,
1015 , 1016,
1015 , 1017,
1016 , 1017,
1018 , 1019,
1018 , 1020,
1019 , 1020,
1021 , 1022,
1021 , 1023,
1022 , 1023,
1024 , 1025,
1024 , 1026,
1025 , 1026,
1027 , 1028,
1027 , 1029,
1028 , 1029,
1030 , 1031,
1030 , 1032,
1031 , 1032,
1033 , 1034,
1033 , 1035,
1034 , 1035,
1036 , 1037,
1036 , 1038,
1037 , 1038,
1039 , 1040,
1039 , 1041,
1040 , 1041,
1042 , 1043,
1042 , 1044,
1043 , 1044,
1045 , 1046,
1045 , 1047,
1046 , 1047,
1048 , 1049,
1048 , 1050,
1049 , 1050,
1051 , 1052,
1051 , 1053,
1052 , 1053,
1054 , 1055,
1054 , 1056,
1055 , 1056,
1057 , 1058,
1057 , 1059,
1058 , 1059,
1060 , 1061,
1060 , 1062,
1061 , 1062,
1063 , 1064,
1063 , 1065,
1064 , 1065,
1066 , 1067,
1066 , 1068,
1067 , 1068,
1069 , 1070,
1069 , 1071,
1070 , 1071,
1072 , 1073,
1072 , 1074,
1073 , 1074,
1075 , 1076,
1075 , 1077,
1076 , 1077,
1078 , 1079,
1078 , 1080,
1079 , 1080,
1081 , 1082,
1081 , 1083,
1082 , 1083,
1084 , 1085,
1084 , 1086,
1085 , 1086,
1087 , 1088,
1087 , 1089,
1088 , 1089,
1090 , 1091,
1090 , 1092,
1091 , 1092,
1093 , 1094,
1093 , 1095,
1094 , 1095,
1096 , 1097,
1096 , 1098,
1097 , 1098,
1099 , 1100,
1099 , 1101,
1100 , 1101,
1102 , 1103,
1102 , 1104,
1103 , 1104,
1105 , 1106,
1105 , 1107,
1106 , 1107,
1108 , 1109,
1108 , 1110,
1109 , 1110,
1111 , 1112,
1111 , 1113,
1112 , 1113,
1114 , 1115,
1114 , 1116,
1115 , 1116,
1117 , 1118,
1117 , 1119,
1118 , 1119,
1120 , 1121,
1120 , 1122,
1121 , 1122,
1123 , 1124,
1123 , 1125,
1124 , 1125,
1126 , 1127,
1126 , 1128,
1127 , 1128,
1129 , 1130,
1129 , 1131,
1130 , 1131,
1132 , 1133,
1132 , 1134,
1133 , 1134,
1135 , 1136,
1135 , 1137,
1136 , 1137,
1138 , 1139,
1138 , 1140,
1139 , 1140,
1141 , 1142,
1141 , 1143,
1142 , 1143,
1144 , 1145,
1144 , 1146,
1145 , 1146,
1147 , 1148,
1147 , 1149,
1148 , 1149,
1150 , 1151,
1150 , 1152,
1151 , 1152,
1153 , 1154,
1153 , 1155,
1154 , 1155,
1156 , 1157,
1156 , 1158,
1157 , 1158,
1159 , 1160,
1159 , 1161,
1160 , 1161,
1162 , 1163,
1162 , 1164,
1163 , 1164,
1165 , 1166,
1165 , 1167,
1166 , 1167,
1168 , 1169,
1168 , 1170,
1169 , 1170,
1171 , 1172,
1171 , 1173,
1172 , 1173,
1174 , 1175,
1174 , 1176,
1175 , 1176,
1177 , 1178,
1177 , 1179,
1178 , 1179,
1180 , 1181,
1180 , 1182,
1181 , 1182,
1183 , 1184,
1183 , 1185,
1184 , 1185,
1186 , 1187,
1186 , 1188,
1187 , 1188,
1189 , 1190,
1189 , 1191,
1190 , 1191,
1192 , 1193,
1192 , 1194,
1193 , 1194,
1195 , 1196,
1195 , 1197,
1196 , 1197,
1198 , 1199,
1198 , 1200,
1199 , 1200,
1201 , 1202,
1201 , 1203,
1202 , 1203,
1204 , 1205,
1204 , 1206,
1205 , 1206,
1207 , 1208,
1207 , 1209,
1208 , 1209,
1210 , 1211,
1210 , 1212,
1211 , 1212,
1213 , 1214,
1213 , 1215,
1214 , 1215,
1216 , 1217,
1216 , 1218,
1217 , 1218,
1219 , 1220,
1219 , 1221,
1220 , 1221,
1222 , 1223,
1222 , 1224,
1223 , 1224,
1225 , 1226,
1225 , 1227,
1226 , 1227,
1228 , 1229,
1228 , 1230,
1229 , 1230,
1231 , 1232,
1231 , 1233,
1232 , 1233,
1234 , 1235,
1234 , 1236,
1235 , 1236,
1237 , 1238,
1237 , 1239,
1238 , 1239,
1240 , 1241,
1240 , 1242,
1241 , 1242,
1243 , 1244,
1243 , 1245,
1244 , 1245,
1246 , 1247,
1246 , 1248,
1247 , 1248,
1249 , 1250,
1249 , 1251,
1250 , 1251,
1252 , 1253,
1252 , 1254,
1253 , 1254,
1255 , 1256,
1255 , 1257,
1256 , 1257,
1258 , 1259,
1258 , 1260,
1259 , 1260,
1261 , 1262,
1261 , 1263,
1262 , 1263,
1264 , 1265,
1264 , 1266,
1265 , 1266,
1267 , 1268,
1267 , 1269,
1268 , 1269,
1270 , 1271,
1270 , 1272,
1271 , 1272,
1273 , 1274,
1273 , 1275,
1274 , 1275,
1276 , 1277,
1276 , 1278,
1277 , 1278,
1279 , 1280,
1279 , 1281,
1280 , 1281,
1282 , 1283,
1282 , 1284,
1283 , 1284,
1285 , 1286,
1285 , 1287,
1286 , 1287,
1288 , 1289,
1288 , 1290,
1289 , 1290,
1291 , 1292,
1291 , 1293,
1292 , 1293,
1294 , 1295,
1294 , 1296,
1295 , 1296,
1297 , 1298,
1297 , 1299,
1298 , 1299,
1300 , 1301,
1300 , 1302,
1301 , 1302,
1303 , 1304,
1303 , 1305,
1304 , 1305,
1306 , 1307,
1306 , 1308,
1307 , 1308,
1309 , 1310,
1309 , 1311,
1310 , 1311,
1312 , 1313,
1312 , 1314,
1313 , 1314,
1315 , 1316,
1315 , 1317,
1316 , 1317,
1318 , 1319,
1318 , 1320,
1319 , 1320,
1321 , 1322,
1321 , 1323,
1322 , 1323,
1324 , 1325,
1324 , 1326,
1325 , 1326,
1327 , 1328,
1327 , 1329,
1328 , 1329,
1330 , 1331,
1330 , 1332,
1331 , 1332,
1333 , 1334,
1333 , 1335,
1334 , 1335,
1336 , 1337,
1336 , 1338,
1337 , 1338,
1339 , 1340,
1339 , 1341,
1340 , 1341,
1342 , 1343,
1342 , 1344,
1343 , 1344,
1345 , 1346,
1345 , 1347,
1346 , 1347,
1348 , 1349,
1348 , 1350,
1349 , 1350,
1351 , 1352,
1351 , 1353,
1352 , 1353,
1354 , 1355,
1354 , 1356,
1355 , 1356,
1357 , 1358,
1357 , 1359,
1358 , 1359,
1360 , 1361,
1360 , 1362,
1361 , 1362,
1363 , 1364,
1363 , 1365,
1364 , 1365,
1366 , 1367,
1366 , 1368,
1367 , 1368,
1369 , 1370,
1369 , 1371,
1370 , 1371,
1372 , 1373,
1372 , 1374,
1373 , 1374,
1375 , 1376,
1375 , 1377,
1376 , 1377,
1378 , 1379,
1378 , 1380,
1379 , 1380,
1381 , 1382,
1381 , 1383,
1382 , 1383,
1384 , 1385,
1384 , 1386,
1385 , 1386,
1387 , 1388,
1387 , 1389,
1388 , 1389,
1390 , 1391,
1390 , 1392,
1391 , 1392,
1393 , 1394,
1393 , 1395,
1394 , 1395,
1396 , 1397,
1396 , 1398,
1397 , 1398,
1399 , 1400,
1399 , 1401,
1400 , 1401,
1402 , 1403,
1402 , 1404,
1403 , 1404,
1405 , 1406,
1405 , 1407,
1406 , 1407,
1408 , 1409,
1408 , 1410,
1409 , 1410,
1411 , 1412,
1411 , 1413,
1412 , 1413,
1414 , 1415,
1414 , 1416,
1415 , 1416,
1417 , 1418,
1417 , 1419,
1418 , 1419,
1420 , 1421,
1420 , 1422,
1421 , 1422,
1423 , 1424,
1423 , 1425,
1424 , 1425,
1426 , 1427,
1426 , 1428,
1427 , 1428,
1429 , 1430,
1429 , 1431,
1430 , 1431,
1432 , 1433,
1432 , 1434,
1433 , 1434,
1435 , 1436,
1435 , 1437,
1436 , 1437,
1438 , 1439,
1438 , 1440,
1439 , 1440,
1441 , 1442,
1441 , 1443,
1442 , 1443,
1444 , 1445,
1444 , 1446,
1445 , 1446,
1447 , 1448,
1447 , 1449,
1448 , 1449,
1450 , 1451,
1450 , 1452,
1451 , 1452,
1453 , 1454,
1453 , 1455,
1454 , 1455,
1456 , 1457,
1456 , 1458,
1457 , 1458,
1459 , 1460,
1459 , 1461,
1460 , 1461,
1462 , 1463,
1462 , 1464,
1463 , 1464,
1465 , 1466,
1465 , 1467,
1466 , 1467,
1468 , 1469,
1468 , 1470,
1469 , 1470,
1471 , 1472,
1471 , 1473,
1472 , 1473,
1474 , 1475,
1474 , 1476,
1475 , 1476,
1477 , 1478,
1477 , 1479,
1478 , 1479,
1480 , 1481,
1480 , 1482,
1481 , 1482,
1483 , 1484,
1483 , 1485,
1484 , 1485,
1486 , 1487,
1486 , 1488,
1487 , 1488,
1489 , 1490,
1489 , 1491,
1490 , 1491,
1492 , 1493,
1492 , 1494,
1493 , 1494,
1495 , 1496,
1495 , 1497,
1496 , 1497,
1498 , 1499,
1498 , 1500,
1499 , 1500,
1501 , 1502,
1501 , 1503,
1502 , 1503,
1504 , 1505,
1504 , 1506,
1505 , 1506,
1507 , 1508,
1507 , 1509,
1508 , 1509,
1510 , 1511,
1510 , 1512,
1511 , 1512,
1513 , 1514,
1513 , 1515,
1514 , 1515,
1516 , 1517,
1516 , 1518,
1517 , 1518,
1519 , 1520,
1519 , 1521,
1520 , 1521,
1522 , 1523,
1522 , 1524,
1523 , 1524,
1525 , 1526,
1525 , 1527,
1526 , 1527,
1528 , 1529,
1528 , 1530,
1529 , 1530,
1531 , 1532,
1531 , 1533,
1532 , 1533,
1534 , 1535,
1534 , 1536,
1535 , 1536,
1537 , 1538,
1537 , 1539,
1538 , 1539,
1540 , 1541,
1540 , 1542,
1541 , 1542,
1543 , 1544,
1543 , 1545,
1544 , 1545,
1546 , 1547,
1546 , 1548,
1547 , 1548,
1549 , 1550,
1549 , 1551,
1550 , 1551,
1552 , 1553,
1552 , 1554,
1553 , 1554,
1555 , 1556,
1555 , 1557,
1556 , 1557,
1558 , 1559,
1558 , 1560,
1559 , 1560,
1561 , 1562,
1561 , 1563,
1562 , 1563,
1564 , 1565,
1564 , 1566,
1565 , 1566,
1567 , 1568,
1567 , 1569,
1568 , 1569,
1570 , 1571,
1570 , 1572,
1571 , 1572,
1573 , 1574,
1573 , 1575,
1574 , 1575,
1576 , 1577,
1576 , 1578,
1577 , 1578,
1579 , 1580,
1579 , 1581,
1580 , 1581,
1582 , 1583,
1582 , 1584,
1583 , 1584,
1585 , 1586,
1585 , 1587,
1586 , 1587,
1588 , 1589,
1588 , 1590,
1589 , 1590,
1591 , 1592,
1591 , 1593,
1592 , 1593,
1594 , 1595,
1594 , 1596,
1595 , 1596,
1597 , 1598,
1597 , 1599,
1598 , 1599,
1600 , 1601,
1600 , 1602,
1601 , 1602,
1603 , 1604,
1603 , 1605,
1604 , 1605,
1606 , 1607,
1606 , 1608,
1607 , 1608,
1609 , 1610,
1609 , 1611,
1610 , 1611,
1612 , 1613,
1612 , 1614,
1613 , 1614,
1615 , 1616,
1615 , 1617,
1616 , 1617,
1618 , 1619,
1618 , 1620,
1619 , 1620,
1621 , 1622,
1621 , 1623,
1622 , 1623,
1624 , 1625,
1624 , 1626,
1625 , 1626,
1627 , 1628,
1627 , 1629,
1628 , 1629,
1630 , 1631,
1630 , 1632,
1631 , 1632,
1633 , 1634,
1633 , 1635,
1634 , 1635,
1636 , 1637,
1636 , 1638,
1637 , 1638,
1639 , 1640,
1639 , 1641,
1640 , 1641,
1642 , 1643,
1642 , 1644,
1643 , 1644,
1645 , 1646,
1645 , 1647,
1646 , 1647,
1648 , 1649,
1648 , 1650,
1649 , 1650,
1651 , 1652,
1651 , 1653,
1652 , 1653,
1654 , 1655,
1654 , 1656,
1655 , 1656,
1657 , 1658,
1657 , 1659,
1658 , 1659,
1660 , 1661,
1660 , 1662,
1661 , 1662,
1663 , 1664,
1663 , 1665,
1664 , 1665,
1666 , 1667,
1666 , 1668,
1667 , 1668,
1669 , 1670,
1669 , 1671,
1670 , 1671,
1672 , 1673,
1672 , 1674,
1673 , 1674,
1675 , 1676,
1675 , 1677,
1676 , 1677,
1678 , 1679,
1678 , 1680,
1679 , 1680,
1681 , 1682,
1681 , 1683,
1682 , 1683,
1684 , 1685,
1684 , 1686,
1685 , 1686,
1687 , 1688,
1687 , 1689,
1688 , 1689,
1690 , 1691,
1690 , 1692,
1691 , 1692,
1693 , 1694,
1693 , 1695,
1694 , 1695,
1696 , 1697,
1696 , 1698,
1697 , 1698,
1699 , 1700,
1699 , 1701,
1700 , 1701,
1702 , 1703,
1702 , 1704,
1703 , 1704,
1705 , 1706,
1705 , 1707,
1706 , 1707,
1708 , 1709,
1708 , 1710,
1709 , 1710,
1711 , 1712,
1711 , 1713,
1712 , 1713,
1714 , 1715,
1714 , 1716,
1715 , 1716,
1717 , 1718,
1717 , 1719,
1718 , 1719,
1720 , 1721,
1720 , 1722,
1721 , 1722,
1723 , 1724,
1723 , 1725,
1724 , 1725,
1726 , 1727,
1726 , 1728,
1727 , 1728,
1729 , 1730,
1729 , 1731,
1730 , 1731,
1732 , 1733,
1732 , 1734,
1733 , 1734,
1735 , 1736,
1735 , 1737,
1736 , 1737,
1738 , 1739,
1738 , 1740,
1739 , 1740,
1741 , 1742,
1741 , 1743,
1742 , 1743,
1744 , 1745,
1744 , 1746,
1745 , 1746,
1747 , 1748,
1747 , 1749,
1748 , 1749,
1750 , 1751,
1750 , 1752,
1751 , 1752,
1753 , 1754,
1753 , 1755,
1754 , 1755,
1756 , 1757,
1756 , 1758,
1757 , 1758,
1759 , 1760,
1759 , 1761,
1760 , 1761,
1762 , 1763,
1762 , 1764,
1763 , 1764,
1765 , 1766,
1765 , 1767,
1766 , 1767,
1768 , 1769,
1768 , 1770,
1769 , 1770,
1771 , 1772,
1771 , 1773,
1772 , 1773,
1774 , 1775,
1774 , 1776,
1775 , 1776,
1777 , 1778,
1777 , 1779,
1778 , 1779,
1780 , 1781,
1780 , 1782,
1781 , 1782,
1783 , 1784,
1783 , 1785,
1784 , 1785,
1786 , 1787,
1786 , 1788,
1787 , 1788,
1789 , 1790,
1789 , 1791,
1790 , 1791,
1792 , 1793,
1792 , 1794,
1793 , 1794,
1795 , 1796,
1795 , 1797,
1796 , 1797,
1798 , 1799,
1798 , 1800,
1799 , 1800,
1801 , 1802,
1801 , 1803,
1802 , 1803,
1804 , 1805,
1804 , 1806,
1805 , 1806,
1807 , 1808,
1807 , 1809,
1808 , 1809,
1810 , 1811,
1810 , 1812,
1811 , 1812,
1813 , 1814,
1813 , 1815,
1814 , 1815,
1816 , 1817,
1816 , 1818,
1817 , 1818,
1819 , 1820,
1819 , 1821,
1820 , 1821,
1822 , 1823,
1822 , 1824,
1823 , 1824,
1825 , 1826,
1825 , 1827,
1826 , 1827,
1828 , 1829,
1828 , 1830,
1829 , 1830,
1831 , 1832,
1831 , 1833,
1832 , 1833,
1834 , 1835,
1834 , 1836,
1835 , 1836,
1837 , 1838,
1837 , 1839,
1838 , 1839,
1840 , 1841,
1840 , 1842,
1841 , 1842,
1843 , 1844,
1843 , 1845,
1844 , 1845,
1846 , 1847,
1846 , 1848,
1847 , 1848,
1849 , 1850,
1849 , 1851,
1850 , 1851,
1852 , 1853,
1852 , 1854,
1853 , 1854,
1855 , 1856,
1855 , 1857,
1856 , 1857,
1858 , 1859,
1858 , 1860,
1859 , 1860,
1861 , 1862,
1861 , 1863,
1862 , 1863,
1864 , 1865,
1864 , 1866,
1865 , 1866,
1867 , 1868,
1867 , 1869,
1868 , 1869,
1870 , 1871,
1870 , 1872,
1871 , 1872,
1873 , 1874,
1873 , 1875,
1874 , 1875,
1876 , 1877,
1876 , 1878,
1877 , 1878,
1879 , 1880,
1879 , 1881,
1880 , 1881,
1882 , 1883,
1882 , 1884,
1883 , 1884,
1885 , 1886,
1885 , 1887,
1886 , 1887,
1888 , 1889,
1888 , 1890,
1889 , 1890,
1891 , 1892,
1891 , 1893,
1892 , 1893,
1894 , 1895,
1894 , 1896,
1895 , 1896,
1897 , 1898,
1897 , 1899,
1898 , 1899,
1900 , 1901,
1900 , 1902,
1901 , 1902,
1903 , 1904,
1903 , 1905,
1904 , 1905,
1906 , 1907,
1906 , 1908,
1907 , 1908,
1909 , 1910,
1909 , 1911,
1910 , 1911,
1912 , 1913,
1912 , 1914,
1913 , 1914,
1915 , 1916,
1915 , 1917,
1916 , 1917,
1918 , 1919,
1918 , 1920,
1919 , 1920,
1921 , 1922,
1921 , 1923,
1922 , 1923,
1924 , 1925,
1924 , 1926,
1925 , 1926,
1927 , 1928,
1927 , 1929,
1928 , 1929,
1930 , 1931,
1930 , 1932,
1931 , 1932,
1933 , 1934,
1933 , 1935,
1934 , 1935,
1936 , 1937,
1936 , 1938,
1937 , 1938,
1939 , 1940,
1939 , 1941,
1940 , 1941,
1942 , 1943,
1942 , 1944,
1943 , 1944,
1945 , 1946,
1945 , 1947,
1946 , 1947,
1948 , 1949,
1948 , 1950,
1949 , 1950,
1951 , 1952,
1951 , 1953,
1952 , 1953,
1954 , 1955,
1954 , 1956,
1955 , 1956,
1957 , 1958,
1957 , 1959,
1958 , 1959,
1960 , 1961,
1960 , 1962,
1961 , 1962,
1963 , 1964,
1963 , 1965,
1964 , 1965,
1966 , 1967,
1966 , 1968,
1967 , 1968,
1969 , 1970,
1969 , 1971,
1970 , 1971,
1972 , 1973,
1972 , 1974,
1973 , 1974,
1975 , 1976,
1975 , 1977,
1976 , 1977,
1978 , 1979,
1978 , 1980,
1979 , 1980,
1981 , 1982,
1981 , 1983,
1982 , 1983,
1984 , 1985,
1984 , 1986,
1985 , 1986,
1987 , 1988,
1987 , 1989,
1988 , 1989,
1990 , 1991,
1990 , 1992,
1991 , 1992,
1993 , 1994,
1993 , 1995,
1994 , 1995,
1996 , 1997,
1996 , 1998,
1997 , 1998,
1999 , 2000,
1999 , 2001,
2000 , 2001,
2002 , 2003,
2002 , 2004,
2003 , 2004,
2005 , 2006,
2005 , 2007,
2006 , 2007,
2008 , 2009,
2008 , 2010,
2009 , 2010,
2011 , 2012,
2011 , 2013,
2012 , 2013,
2014 , 2015,
2014 , 2016,
2015 , 2016,
2017 , 2018,
2017 , 2019,
2018 , 2019,
2020 , 2021,
2020 , 2022,
2021 , 2022,
2023 , 2024,
2023 , 2025,
2024 , 2025,
2026 , 2027,
2026 , 2028,
2027 , 2028,
2029 , 2030,
2029 , 2031,
2030 , 2031,
2032 , 2033,
2032 , 2034,
2033 , 2034,
2035 , 2036,
2035 , 2037,
2036 , 2037,
2038 , 2039,
2038 , 2040,
2039 , 2040,
2041 , 2042,
2041 , 2043,
2042 , 2043,
2044 , 2045,
2044 , 2046,
2045 , 2046,
2047 , 2048,
2047 , 2049,
2048 , 2049,
2050 , 2051,
2050 , 2052,
2051 , 2052,
2053 , 2054,
2053 , 2055,
2054 , 2055,
2056 , 2057,
2056 , 2058,
2057 , 2058,
2059 , 2060,
2059 , 2061,
2060 , 2061,
2062 , 2063,
2062 , 2064,
2063 , 2064,
2065 , 2066,
2065 , 2067,
2066 , 2067,
2068 , 2069,
2068 , 2070,
2069 , 2070,
2071 , 2072,
2071 , 2073,
2072 , 2073,
2074 , 2075,
2074 , 2076,
2075 , 2076,
2077 , 2078,
2077 , 2079,
2078 , 2079,
2080 , 2081,
2080 , 2082,
2081 , 2082,
2083 , 2084,
2083 , 2085,
2084 , 2085,
2086 , 2087,
2086 , 2088,
2087 , 2088,
2089 , 2090,
2089 , 2091,
2090 , 2091,
2092 , 2093,
2092 , 2094,
2093 , 2094,
2095 , 2096,
2095 , 2097,
2096 , 2097,
2098 , 2099,
2098 , 2100,
2099 , 2100,
2101 , 2102,
2101 , 2103,
2102 , 2103,
2104 , 2105,
2104 , 2106,
2105 , 2106,
2107 , 2108,
2107 , 2109,
2108 , 2109,
2110 , 2111,
2110 , 2112,
2111 , 2112,
2113 , 2114,
2113 , 2115,
2114 , 2115,
2116 , 2117,
2116 , 2118,
2117 , 2118,
2119 , 2120,
2119 , 2121,
2120 , 2121,
2122 , 2123,
2122 , 2124,
2123 , 2124,
2125 , 2126,
2125 , 2127,
2126 , 2127,
2128 , 2129,
2128 , 2130,
2129 , 2130,
2131 , 2132,
2131 , 2133,
2132 , 2133,
2134 , 2135,
2134 , 2136,
2135 , 2136,
2137 , 2138,
2137 , 2139,
2138 , 2139,
2140 , 2141,
2140 , 2142,
2141 , 2142,
2143 , 2144,
2143 , 2145,
2144 , 2145,
2146 , 2147,
2146 , 2148,
2147 , 2148,
2149 , 2150,
2149 , 2151,
2150 , 2151,
2152 , 2153,
2152 , 2154,
2153 , 2154,
2155 , 2156,
2155 , 2157,
2156 , 2157,
2158 , 2159,
2158 , 2160,
2159 , 2160,
2161 , 2162,
2161 , 2163,
2162 , 2163,
2164 , 2165,
2164 , 2166,
2165 , 2166,
2167 , 2168,
2167 , 2169,
2168 , 2169,
2170 , 2171,
2170 , 2172,
2171 , 2172,
2173 , 2174,
2173 , 2175,
2174 , 2175,
2176 , 2177,
2176 , 2178,
2177 , 2178,
2179 , 2180,
2179 , 2181,
2180 , 2181,
2182 , 2183,
2182 , 2184,
2183 , 2184,
2185 , 2186,
2185 , 2187,
2186 , 2187,
2188 , 2189,
2188 , 2190,
2189 , 2190,
2191 , 2192,
2191 , 2193,
2192 , 2193,
2194 , 2195,
2194 , 2196,
2195 , 2196,
2197 , 2198,
2197 , 2199,
2198 , 2199,
2200 , 2201,
2200 , 2202,
2201 , 2202,
2203 , 2204,
2203 , 2205,
2204 , 2205,
2206 , 2207,
2206 , 2208,
2207 , 2208,
2209 , 2210,
2209 , 2211,
2210 , 2211,
2212 , 2213,
2212 , 2214,
2213 , 2214,
2215 , 2216,
2215 , 2217,
2216 , 2217,
2218 , 2219,
2218 , 2220,
2219 , 2220,
2221 , 2222,
2221 , 2223,
2222 , 2223,
2224 , 2225,
2224 , 2226,
2225 , 2226,
2227 , 2228,
2227 , 2229,
2228 , 2229,
2230 , 2231,
2230 , 2232,
2231 , 2232,
2233 , 2234,
2233 , 2235,
2234 , 2235,
2236 , 2237,
2236 , 2238,
2237 , 2238,
2239 , 2240,
2239 , 2241,
2240 , 2241,
2242 , 2243,
2242 , 2244,
2243 , 2244,
2245 , 2246,
2245 , 2247,
2246 , 2247,
2248 , 2249,
2248 , 2250,
2249 , 2250,
2251 , 2252,
2251 , 2253,
2252 , 2253,
2254 , 2255,
2254 , 2256,
2255 , 2256,
2257 , 2258,
2257 , 2259,
2258 , 2259,
2260 , 2261,
2260 , 2262,
2261 , 2262,
2263 , 2264,
2263 , 2265,
2264 , 2265,
2266 , 2267,
2266 , 2268,
2267 , 2268,
2269 , 2270,
2269 , 2271,
2270 , 2271,
2272 , 2273,
2272 , 2274,
2273 , 2274,
2275 , 2276,
2275 , 2277,
2276 , 2277,
2278 , 2279,
2278 , 2280,
2279 , 2280,
2281 , 2282,
2281 , 2283,
2282 , 2283,
2284 , 2285,
2284 , 2286,
2285 , 2286,
2287 , 2288,
2287 , 2289,
2288 , 2289,
2290 , 2291,
2290 , 2292,
2291 , 2292,
2293 , 2294,
2293 , 2295,
2294 , 2295,
2296 , 2297,
2296 , 2298,
2297 , 2298,
2299 , 2300,
2299 , 2301,
2300 , 2301,
2302 , 2303,
2302 , 2304,
2303 , 2304,
2305 , 2306,
2305 , 2307,
2306 , 2307,
2308 , 2309,
2308 , 2310,
2309 , 2310,
2311 , 2312,
2311 , 2313,
2312 , 2313,
2314 , 2315,
2314 , 2316,
2315 , 2316,
2317 , 2318,
2317 , 2319,
2318 , 2319,
2320 , 2321,
2320 , 2322,
2321 , 2322,
2323 , 2324,
2323 , 2325,
2324 , 2325,
2326 , 2327,
2326 , 2328,
2327 , 2328,
2329 , 2330,
2329 , 2331,
2330 , 2331,
2332 , 2333,
2332 , 2334,
2333 , 2334,
2335 , 2336,
2335 , 2337,
2336 , 2337,
2338 , 2339,
2338 , 2340,
2339 , 2340,
2341 , 2342,
2341 , 2343,
2342 , 2343,
2344 , 2345,
2344 , 2346,
2345 , 2346,
2347 , 2348,
2347 , 2349,
2348 , 2349,
2350 , 2351,
2350 , 2352,
2351 , 2352,
2353 , 2354,
2353 , 2355,
2354 , 2355,
2356 , 2357,
2356 , 2358,
2357 , 2358,
2359 , 2360,
2359 , 2361,
2360 , 2361,
2362 , 2363,
2362 , 2364,
2363 , 2364,
2365 , 2366,
2365 , 2367,
2366 , 2367,
2368 , 2369,
2368 , 2370,
2369 , 2370,
2371 , 2372,
2371 , 2373,
2372 , 2373,
2374 , 2375,
2374 , 2376,
2375 , 2376,
2377 , 2378,
2377 , 2379,
2378 , 2379,
2380 , 2381,
2380 , 2382,
2381 , 2382,
2383 , 2384,
2383 , 2385,
2384 , 2385,
2386 , 2387,
2386 , 2388,
2387 , 2388,
2389 , 2390,
2389 , 2391,
2390 , 2391,
2392 , 2393,
2392 , 2394,
2393 , 2394,
2395 , 2396,
2395 , 2397,
2396 , 2397,
2398 , 2399,
2398 , 2400,
2399 , 2400,
2401 , 2402,
2401 , 2403,
2402 , 2403,
2404 , 2405,
2404 , 2406,
2405 , 2406,
2407 , 2408,
2407 , 2409,
2408 , 2409,
2410 , 2411,
2410 , 2412,
2411 , 2412,
2413 , 2414,
2413 , 2415,
2414 , 2415,
2416 , 2417,
2416 , 2418,
2417 , 2418,
2419 , 2420,
2419 , 2421,
2420 , 2421,
2422 , 2423,
2422 , 2424,
2423 , 2424,
2425 , 2426,
2425 , 2427,
2426 , 2427,
2428 , 2429,
2428 , 2430,
2429 , 2430,
2431 , 2432,
2431 , 2433,
2432 , 2433,
2434 , 2435,
2434 , 2436,
2435 , 2436,
2437 , 2438,
2437 , 2439,
2438 , 2439,
2440 , 2441,
2440 , 2442,
2441 , 2442,
2443 , 2444,
2443 , 2445,
2444 , 2445,
2446 , 2447,
2446 , 2448,
2447 , 2448,
2449 , 2450,
2449 , 2451,
2450 , 2451,
2452 , 2453,
2452 , 2454,
2453 , 2454,
2455 , 2456,
2455 , 2457,
2456 , 2457,
2458 , 2459,
2458 , 2460,
2459 , 2460,
2461 , 2462,
2461 , 2463,
2462 , 2463,
2464 , 2465,
2464 , 2466,
2465 , 2466,
2467 , 2468,
2467 , 2469,
2468 , 2469,
2470 , 2471,
2470 , 2472,
2471 , 2472,
2473 , 2474,
2473 , 2475,
2474 , 2475,
2476 , 2477,
2476 , 2478,
2477 , 2478,
2479 , 2480,
2479 , 2481,
2480 , 2481,
2482 , 2483,
2482 , 2484,
2483 , 2484,
2485 , 2486,
2485 , 2487,
2486 , 2487,
2488 , 2489,
2488 , 2490,
2489 , 2490,
2491 , 2492,
2491 , 2493,
2492 , 2493,
2494 , 2495,
2494 , 2496,
2495 , 2496,
2497 , 2498,
2497 , 2499,
2498 , 2499,
2500 , 2501,
2500 , 2502,
2501 , 2502,
2503 , 2504,
2503 , 2505,
2504 , 2505,
2506 , 2507,
2506 , 2508,
2507 , 2508,
2509 , 2510,
2509 , 2511,
2510 , 2511,
2512 , 2513,
2512 , 2514,
2513 , 2514,
2515 , 2516,
2515 , 2517,
2516 , 2517,
2518 , 2519,
2518 , 2520,
2519 , 2520,
2521 , 2522,
2521 , 2523,
2522 , 2523,
2524 , 2525,
2524 , 2526,
2525 , 2526,
2527 , 2528,
2527 , 2529,
2528 , 2529,
2530 , 2531,
2530 , 2532,
2531 , 2532,
2533 , 2534,
2533 , 2535,
2534 , 2535,
2536 , 2537,
2536 , 2538,
2537 , 2538,
2539 , 2540,
2539 , 2541,
2540 , 2541,
2542 , 2543,
2542 , 2544,
2543 , 2544,
2545 , 2546,
2545 , 2547,
2546 , 2547,
2548 , 2549,
2548 , 2550,
2549 , 2550,
2551 , 2552,
2551 , 2553,
2552 , 2553,
2554 , 2555,
2554 , 2556,
2555 , 2556,
2557 , 2558,
2557 , 2559,
2558 , 2559,
2560 , 2561,
2560 , 2562,
2561 , 2562,
2563 , 2564,
2563 , 2565,
2564 , 2565,
2566 , 2567,
2566 , 2568,
2567 , 2568,
2569 , 2570,
2569 , 2571,
2570 , 2571,
2572 , 2573,
2572 , 2574,
2573 , 2574,
2575 , 2576,
2575 , 2577,
2576 , 2577,
2578 , 2579,
2578 , 2580,
2579 , 2580,
2581 , 2582,
2581 , 2583,
2582 , 2583,
2584 , 2585,
2584 , 2586,
2585 , 2586,
2587 , 2588,
2587 , 2589,
2588 , 2589,
2590 , 2591,
2590 , 2592,
2591 , 2592,
2593 , 2594,
2593 , 2595,
2594 , 2595,
2596 , 2597,
2596 , 2598,
2597 , 2598,
2599 , 2600,
2599 , 2601,
2600 , 2601,
2602 , 2603,
2602 , 2604,
2603 , 2604,
2605 , 2606,
2605 , 2607,
2606 , 2607,
2608 , 2609,
2608 , 2610,
2609 , 2610,
2611 , 2612,
2611 , 2613,
2612 , 2613,
2614 , 2615,
2614 , 2616,
2615 , 2616,
2617 , 2618,
2617 , 2619,
2618 , 2619,
2620 , 2621,
2620 , 2622,
2621 , 2622,
2623 , 2624,
2623 , 2625,
2624 , 2625,
2626 , 2627,
2626 , 2628,
2627 , 2628,
2629 , 2630,
2629 , 2631,
2630 , 2631,
2632 , 2633,
2632 , 2634,
2633 , 2634,
2635 , 2636,
2635 , 2637,
2636 , 2637,
2638 , 2639,
2638 , 2640,
2639 , 2640,
2641 , 2642,
2641 , 2643,
2642 , 2643,
2644 , 2645,
2644 , 2646,
2645 , 2646,
2647 , 2648,
2647 , 2649,
2648 , 2649,
2650 , 2651,
2650 , 2652,
2651 , 2652,
2653 , 2654,
2653 , 2655,
2654 , 2655,
2656 , 2657,
2656 , 2658,
2657 , 2658,
2659 , 2660,
2659 , 2661,
2660 , 2661,
2662 , 2663,
2662 , 2664,
2663 , 2664,
2665 , 2666,
2665 , 2667,
2666 , 2667,
2668 , 2669,
2668 , 2670,
2669 , 2670,
2671 , 2672,
2671 , 2673,
2672 , 2673,
2674 , 2675,
2674 , 2676,
2675 , 2676,
2677 , 2678,
2677 , 2679,
2678 , 2679,
2680 , 2681,
2680 , 2682,
2681 , 2682,
2683 , 2684,
2683 , 2685,
2684 , 2685,
2686 , 2687,
2686 , 2688,
2687 , 2688,
2689 , 2690,
2689 , 2691,
2690 , 2691,
2692 , 2693,
2692 , 2694,
2693 , 2694,
2695 , 2696,
2695 , 2697,
2696 , 2697,
2698 , 2699,
2698 , 2700,
2699 , 2700,
2701 , 2702,
2701 , 2703,
2702 , 2703,
2704 , 2705,
2704 , 2706,
2705 , 2706,
2707 , 2708,
2707 , 2709,
2708 , 2709,
2710 , 2711,
2710 , 2712,
2711 , 2712,
2713 , 2714,
2713 , 2715,
2714 , 2715,
2716 , 2717,
2716 , 2718,
2717 , 2718,
2719 , 2720,
2719 , 2721,
2720 , 2721,
2722 , 2723,
2722 , 2724,
2723 , 2724,
2725 , 2726,
2725 , 2727,
2726 , 2727,
2728 , 2729,
2728 , 2730,
2729 , 2730,
2731 , 2732,
2731 , 2733,
2732 , 2733,
2734 , 2735,
2734 , 2736,
2735 , 2736,
2737 , 2738,
2737 , 2739,
2738 , 2739,
2740 , 2741,
2740 , 2742,
2741 , 2742,
2743 , 2744,
2743 , 2745,
2744 , 2745,
2746 , 2747,
2746 , 2748,
2747 , 2748,
2749 , 2750,
2749 , 2751,
2750 , 2751,
2752 , 2753,
2752 , 2754,
2753 , 2754,
2755 , 2756,
2755 , 2757,
2756 , 2757,
2758 , 2759,
2758 , 2760,
2759 , 2760,
2761 , 2762,
2761 , 2763,
2762 , 2763,
2764 , 2765,
2764 , 2766,
2765 , 2766,
2767 , 2768,
2767 , 2769,
2768 , 2769,
2770 , 2771,
2770 , 2772,
2771 , 2772,
2773 , 2774,
2773 , 2775,
2774 , 2775,
2776 , 2777,
2776 , 2778,
2777 , 2778,
2779 , 2780,
2779 , 2781,
2780 , 2781,
2782 , 2783,
2782 , 2784,
2783 , 2784,
2785 , 2786,
2785 , 2787,
2786 , 2787,
2788 , 2789,
2788 , 2790,
2789 , 2790,
2791 , 2792,
2791 , 2793,
2792 , 2793,
2794 , 2795,
2794 , 2796,
2795 , 2796,
2797 , 2798,
2797 , 2799,
2798 , 2799,
2800 , 2801,
2800 , 2802,
2801 , 2802,
2803 , 2804,
2803 , 2805,
2804 , 2805,
2806 , 2807,
2806 , 2808,
2807 , 2808,
2809 , 2810,
2809 , 2811,
2810 , 2811,
2812 , 2813,
2812 , 2814,
2813 , 2814,
2815 , 2816,
2815 , 2817,
2816 , 2817,
2818 , 2819,
2818 , 2820,
2819 , 2820,
2821 , 2822,
2821 , 2823,
2822 , 2823,
2824 , 2825,
2824 , 2826,
2825 , 2826,
2827 , 2828,
2827 , 2829,
2828 , 2829,
2830 , 2831,
2830 , 2832,
2831 , 2832,
2833 , 2834,
2833 , 2835,
2834 , 2835,
2836 , 2837,
2836 , 2838,
2837 , 2838,
2839 , 2840,
2839 , 2841,
2840 , 2841,
2842 , 2843,
2842 , 2844,
2843 , 2844,
2845 , 2846,
2845 , 2847,
2846 , 2847,
2848 , 2849,
2848 , 2850,
2849 , 2850,
2851 , 2852,
2851 , 2853,
2852 , 2853,
2854 , 2855,
2854 , 2856,
2855 , 2856,
2857 , 2858,
2857 , 2859,
2858 , 2859,
2860 , 2861,
2860 , 2862,
2861 , 2862,
2863 , 2864,
2863 , 2865,
2864 , 2865,
2866 , 2867,
2866 , 2868,
2867 , 2868,
2869 , 2870,
2869 , 2871,
2870 , 2871,
2872 , 2873,
2872 , 2874,
2873 , 2874,
2875 , 2876,
2875 , 2877,
2876 , 2877,
2878 , 2879,
2878 , 2880,
2879 , 2880,
2881 , 2882,
2881 , 2883,
2882 , 2883,
2884 , 2885,
2884 , 2886,
2885 , 2886,
2887 , 2888,
2887 , 2889,
2888 , 2889,
2890 , 2891,
2890 , 2892,
2891 , 2892,
2893 , 2894,
2893 , 2895,
2894 , 2895,
2896 , 2897,
2896 , 2898,
2897 , 2898,
2899 , 2900,
2899 , 2901,
2900 , 2901,
2902 , 2903,
2902 , 2904,
2903 , 2904,
2905 , 2906,
2905 , 2907,
2906 , 2907,
2908 , 2909,
2908 , 2910,
2909 , 2910,
2911 , 2912,
2911 , 2913,
2912 , 2913,
2914 , 2915,
2914 , 2916,
2915 , 2916,
2917 , 2918,
2917 , 2919,
2918 , 2919,
2920 , 2921,
2920 , 2922,
2921 , 2922,
2923 , 2924,
2923 , 2925,
2924 , 2925,
2926 , 2927,
2926 , 2928,
2927 , 2928,
2929 , 2930,
2929 , 2931,
2930 , 2931,
2932 , 2933,
2932 , 2934,
2933 , 2934,
2935 , 2936,
2935 , 2937,
2936 , 2937,
2938 , 2939,
2938 , 2940,
2939 , 2940,
2941 , 2942,
2941 , 2943,
2942 , 2943,
2944 , 2945,
2944 , 2946,
2945 , 2946,
2947 , 2948,
2947 , 2949,
2948 , 2949,
2950 , 2951,
2950 , 2952,
2951 , 2952,
2953 , 2954,
2953 , 2955,
2954 , 2955,
2956 , 2957,
2956 , 2958,
2957 , 2958,
2959 , 2960,
2959 , 2961,
2960 , 2961,
2962 , 2963,
2962 , 2964,
2963 , 2964,
2965 , 2966,
2965 , 2967,
2966 , 2967,
2968 , 2969,
2968 , 2970,
2969 , 2970,
2971 , 2972,
2971 , 2973,
2972 , 2973,
2974 , 2975,
2974 , 2976,
2975 , 2976,
2977 , 2978,
2977 , 2979,
2978 , 2979,
2980 , 2981,
2980 , 2982,
2981 , 2982,
2983 , 2984,
2983 , 2985,
2984 , 2985,
2986 , 2987,
2986 , 2988,
2987 , 2988
};
const int MSD::ExclusionList1_2_3_4Size = 3033;

const NsqUdfInvocation MSD::NsqInvocationTable[] = 
{
{ 31, -1, MSD::NSQ2, 3033, MSD::Exclusion, (SiteTuplePair *)ExclusionList1_2_3_4, (void *)ChargeNsqParams  } ,
{ 30, 32, MSD::NSQ1, 3033, MSD::Exclusion, (SiteTuplePair *)ExclusionList1_2_3_4,  (void *)LJNsqParams } 
};
const int MSD::NsqInvocationTableSize = 2;

const int MSD::SiteIDtoSiteTypeMap[] = 
{
7,
4,
4,
4,
1,
2,
0,
3,
3,
3,
5,
6,
6,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8,
9,
8,
8
};
const int MSD::SiteIDtoSiteTypeMapSize = 2989;

const int MSD::Water3sites[] = {
14,13,15,
17,16,18,
20,19,21,
23,22,24,
26,25,27,
29,28,30,
32,31,33,
35,34,36,
38,37,39,
41,40,42,
44,43,45,
47,46,48,
50,49,51,
53,52,54,
56,55,57,
59,58,60,
62,61,63,
65,64,66,
68,67,69,
71,70,72,
74,73,75,
77,76,78,
80,79,81,
83,82,84,
86,85,87,
89,88,90,
92,91,93,
95,94,96,
98,97,99,
101,100,102,
104,103,105,
107,106,108,
110,109,111,
113,112,114,
116,115,117,
119,118,120,
122,121,123,
125,124,126,
128,127,129,
131,130,132,
134,133,135,
137,136,138,
140,139,141,
143,142,144,
146,145,147,
149,148,150,
152,151,153,
155,154,156,
158,157,159,
161,160,162,
164,163,165,
167,166,168,
170,169,171,
173,172,174,
176,175,177,
179,178,180,
182,181,183,
185,184,186,
188,187,189,
191,190,192,
194,193,195,
197,196,198,
200,199,201,
203,202,204,
206,205,207,
209,208,210,
212,211,213,
215,214,216,
218,217,219,
221,220,222,
224,223,225,
227,226,228,
230,229,231,
233,232,234,
236,235,237,
239,238,240,
242,241,243,
245,244,246,
248,247,249,
251,250,252,
254,253,255,
257,256,258,
260,259,261,
263,262,264,
266,265,267,
269,268,270,
272,271,273,
275,274,276,
278,277,279,
281,280,282,
284,283,285,
287,286,288,
290,289,291,
293,292,294,
296,295,297,
299,298,300,
302,301,303,
305,304,306,
308,307,309,
311,310,312,
314,313,315,
317,316,318,
320,319,321,
323,322,324,
326,325,327,
329,328,330,
332,331,333,
335,334,336,
338,337,339,
341,340,342,
344,343,345,
347,346,348,
350,349,351,
353,352,354,
356,355,357,
359,358,360,
362,361,363,
365,364,366,
368,367,369,
371,370,372,
374,373,375,
377,376,378,
380,379,381,
383,382,384,
386,385,387,
389,388,390,
392,391,393,
395,394,396,
398,397,399,
401,400,402,
404,403,405,
407,406,408,
410,409,411,
413,412,414,
416,415,417,
419,418,420,
422,421,423,
425,424,426,
428,427,429,
431,430,432,
434,433,435,
437,436,438,
440,439,441,
443,442,444,
446,445,447,
449,448,450,
452,451,453,
455,454,456,
458,457,459,
461,460,462,
464,463,465,
467,466,468,
470,469,471,
473,472,474,
476,475,477,
479,478,480,
482,481,483,
485,484,486,
488,487,489,
491,490,492,
494,493,495,
497,496,498,
500,499,501,
503,502,504,
506,505,507,
509,508,510,
512,511,513,
515,514,516,
518,517,519,
521,520,522,
524,523,525,
527,526,528,
530,529,531,
533,532,534,
536,535,537,
539,538,540,
542,541,543,
545,544,546,
548,547,549,
551,550,552,
554,553,555,
557,556,558,
560,559,561,
563,562,564,
566,565,567,
569,568,570,
572,571,573,
575,574,576,
578,577,579,
581,580,582,
584,583,585,
587,586,588,
590,589,591,
593,592,594,
596,595,597,
599,598,600,
602,601,603,
605,604,606,
608,607,609,
611,610,612,
614,613,615,
617,616,618,
620,619,621,
623,622,624,
626,625,627,
629,628,630,
632,631,633,
635,634,636,
638,637,639,
641,640,642,
644,643,645,
647,646,648,
650,649,651,
653,652,654,
656,655,657,
659,658,660,
662,661,663,
665,664,666,
668,667,669,
671,670,672,
674,673,675,
677,676,678,
680,679,681,
683,682,684,
686,685,687,
689,688,690,
692,691,693,
695,694,696,
698,697,699,
701,700,702,
704,703,705,
707,706,708,
710,709,711,
713,712,714,
716,715,717,
719,718,720,
722,721,723,
725,724,726,
728,727,729,
731,730,732,
734,733,735,
737,736,738,
740,739,741,
743,742,744,
746,745,747,
749,748,750,
752,751,753,
755,754,756,
758,757,759,
761,760,762,
764,763,765,
767,766,768,
770,769,771,
773,772,774,
776,775,777,
779,778,780,
782,781,783,
785,784,786,
788,787,789,
791,790,792,
794,793,795,
797,796,798,
800,799,801,
803,802,804,
806,805,807,
809,808,810,
812,811,813,
815,814,816,
818,817,819,
821,820,822,
824,823,825,
827,826,828,
830,829,831,
833,832,834,
836,835,837,
839,838,840,
842,841,843,
845,844,846,
848,847,849,
851,850,852,
854,853,855,
857,856,858,
860,859,861,
863,862,864,
866,865,867,
869,868,870,
872,871,873,
875,874,876,
878,877,879,
881,880,882,
884,883,885,
887,886,888,
890,889,891,
893,892,894,
896,895,897,
899,898,900,
902,901,903,
905,904,906,
908,907,909,
911,910,912,
914,913,915,
917,916,918,
920,919,921,
923,922,924,
926,925,927,
929,928,930,
932,931,933,
935,934,936,
938,937,939,
941,940,942,
944,943,945,
947,946,948,
950,949,951,
953,952,954,
956,955,957,
959,958,960,
962,961,963,
965,964,966,
968,967,969,
971,970,972,
974,973,975,
977,976,978,
980,979,981,
983,982,984,
986,985,987,
989,988,990,
992,991,993,
995,994,996,
998,997,999,
1001,1000,1002,
1004,1003,1005,
1007,1006,1008,
1010,1009,1011,
1013,1012,1014,
1016,1015,1017,
1019,1018,1020,
1022,1021,1023,
1025,1024,1026,
1028,1027,1029,
1031,1030,1032,
1034,1033,1035,
1037,1036,1038,
1040,1039,1041,
1043,1042,1044,
1046,1045,1047,
1049,1048,1050,
1052,1051,1053,
1055,1054,1056,
1058,1057,1059,
1061,1060,1062,
1064,1063,1065,
1067,1066,1068,
1070,1069,1071,
1073,1072,1074,
1076,1075,1077,
1079,1078,1080,
1082,1081,1083,
1085,1084,1086,
1088,1087,1089,
1091,1090,1092,
1094,1093,1095,
1097,1096,1098,
1100,1099,1101,
1103,1102,1104,
1106,1105,1107,
1109,1108,1110,
1112,1111,1113,
1115,1114,1116,
1118,1117,1119,
1121,1120,1122,
1124,1123,1125,
1127,1126,1128,
1130,1129,1131,
1133,1132,1134,
1136,1135,1137,
1139,1138,1140,
1142,1141,1143,
1145,1144,1146,
1148,1147,1149,
1151,1150,1152,
1154,1153,1155,
1157,1156,1158,
1160,1159,1161,
1163,1162,1164,
1166,1165,1167,
1169,1168,1170,
1172,1171,1173,
1175,1174,1176,
1178,1177,1179,
1181,1180,1182,
1184,1183,1185,
1187,1186,1188,
1190,1189,1191,
1193,1192,1194,
1196,1195,1197,
1199,1198,1200,
1202,1201,1203,
1205,1204,1206,
1208,1207,1209,
1211,1210,1212,
1214,1213,1215,
1217,1216,1218,
1220,1219,1221,
1223,1222,1224,
1226,1225,1227,
1229,1228,1230,
1232,1231,1233,
1235,1234,1236,
1238,1237,1239,
1241,1240,1242,
1244,1243,1245,
1247,1246,1248,
1250,1249,1251,
1253,1252,1254,
1256,1255,1257,
1259,1258,1260,
1262,1261,1263,
1265,1264,1266,
1268,1267,1269,
1271,1270,1272,
1274,1273,1275,
1277,1276,1278,
1280,1279,1281,
1283,1282,1284,
1286,1285,1287,
1289,1288,1290,
1292,1291,1293,
1295,1294,1296,
1298,1297,1299,
1301,1300,1302,
1304,1303,1305,
1307,1306,1308,
1310,1309,1311,
1313,1312,1314,
1316,1315,1317,
1319,1318,1320,
1322,1321,1323,
1325,1324,1326,
1328,1327,1329,
1331,1330,1332,
1334,1333,1335,
1337,1336,1338,
1340,1339,1341,
1343,1342,1344,
1346,1345,1347,
1349,1348,1350,
1352,1351,1353,
1355,1354,1356,
1358,1357,1359,
1361,1360,1362,
1364,1363,1365,
1367,1366,1368,
1370,1369,1371,
1373,1372,1374,
1376,1375,1377,
1379,1378,1380,
1382,1381,1383,
1385,1384,1386,
1388,1387,1389,
1391,1390,1392,
1394,1393,1395,
1397,1396,1398,
1400,1399,1401,
1403,1402,1404,
1406,1405,1407,
1409,1408,1410,
1412,1411,1413,
1415,1414,1416,
1418,1417,1419,
1421,1420,1422,
1424,1423,1425,
1427,1426,1428,
1430,1429,1431,
1433,1432,1434,
1436,1435,1437,
1439,1438,1440,
1442,1441,1443,
1445,1444,1446,
1448,1447,1449,
1451,1450,1452,
1454,1453,1455,
1457,1456,1458,
1460,1459,1461,
1463,1462,1464,
1466,1465,1467,
1469,1468,1470,
1472,1471,1473,
1475,1474,1476,
1478,1477,1479,
1481,1480,1482,
1484,1483,1485,
1487,1486,1488,
1490,1489,1491,
1493,1492,1494,
1496,1495,1497,
1499,1498,1500,
1502,1501,1503,
1505,1504,1506,
1508,1507,1509,
1511,1510,1512,
1514,1513,1515,
1517,1516,1518,
1520,1519,1521,
1523,1522,1524,
1526,1525,1527,
1529,1528,1530,
1532,1531,1533,
1535,1534,1536,
1538,1537,1539,
1541,1540,1542,
1544,1543,1545,
1547,1546,1548,
1550,1549,1551,
1553,1552,1554,
1556,1555,1557,
1559,1558,1560,
1562,1561,1563,
1565,1564,1566,
1568,1567,1569,
1571,1570,1572,
1574,1573,1575,
1577,1576,1578,
1580,1579,1581,
1583,1582,1584,
1586,1585,1587,
1589,1588,1590,
1592,1591,1593,
1595,1594,1596,
1598,1597,1599,
1601,1600,1602,
1604,1603,1605,
1607,1606,1608,
1610,1609,1611,
1613,1612,1614,
1616,1615,1617,
1619,1618,1620,
1622,1621,1623,
1625,1624,1626,
1628,1627,1629,
1631,1630,1632,
1634,1633,1635,
1637,1636,1638,
1640,1639,1641,
1643,1642,1644,
1646,1645,1647,
1649,1648,1650,
1652,1651,1653,
1655,1654,1656,
1658,1657,1659,
1661,1660,1662,
1664,1663,1665,
1667,1666,1668,
1670,1669,1671,
1673,1672,1674,
1676,1675,1677,
1679,1678,1680,
1682,1681,1683,
1685,1684,1686,
1688,1687,1689,
1691,1690,1692,
1694,1693,1695,
1697,1696,1698,
1700,1699,1701,
1703,1702,1704,
1706,1705,1707,
1709,1708,1710,
1712,1711,1713,
1715,1714,1716,
1718,1717,1719,
1721,1720,1722,
1724,1723,1725,
1727,1726,1728,
1730,1729,1731,
1733,1732,1734,
1736,1735,1737,
1739,1738,1740,
1742,1741,1743,
1745,1744,1746,
1748,1747,1749,
1751,1750,1752,
1754,1753,1755,
1757,1756,1758,
1760,1759,1761,
1763,1762,1764,
1766,1765,1767,
1769,1768,1770,
1772,1771,1773,
1775,1774,1776,
1778,1777,1779,
1781,1780,1782,
1784,1783,1785,
1787,1786,1788,
1790,1789,1791,
1793,1792,1794,
1796,1795,1797,
1799,1798,1800,
1802,1801,1803,
1805,1804,1806,
1808,1807,1809,
1811,1810,1812,
1814,1813,1815,
1817,1816,1818,
1820,1819,1821,
1823,1822,1824,
1826,1825,1827,
1829,1828,1830,
1832,1831,1833,
1835,1834,1836,
1838,1837,1839,
1841,1840,1842,
1844,1843,1845,
1847,1846,1848,
1850,1849,1851,
1853,1852,1854,
1856,1855,1857,
1859,1858,1860,
1862,1861,1863,
1865,1864,1866,
1868,1867,1869,
1871,1870,1872,
1874,1873,1875,
1877,1876,1878,
1880,1879,1881,
1883,1882,1884,
1886,1885,1887,
1889,1888,1890,
1892,1891,1893,
1895,1894,1896,
1898,1897,1899,
1901,1900,1902,
1904,1903,1905,
1907,1906,1908,
1910,1909,1911,
1913,1912,1914,
1916,1915,1917,
1919,1918,1920,
1922,1921,1923,
1925,1924,1926,
1928,1927,1929,
1931,1930,1932,
1934,1933,1935,
1937,1936,1938,
1940,1939,1941,
1943,1942,1944,
1946,1945,1947,
1949,1948,1950,
1952,1951,1953,
1955,1954,1956,
1958,1957,1959,
1961,1960,1962,
1964,1963,1965,
1967,1966,1968,
1970,1969,1971,
1973,1972,1974,
1976,1975,1977,
1979,1978,1980,
1982,1981,1983,
1985,1984,1986,
1988,1987,1989,
1991,1990,1992,
1994,1993,1995,
1997,1996,1998,
2000,1999,2001,
2003,2002,2004,
2006,2005,2007,
2009,2008,2010,
2012,2011,2013,
2015,2014,2016,
2018,2017,2019,
2021,2020,2022,
2024,2023,2025,
2027,2026,2028,
2030,2029,2031,
2033,2032,2034,
2036,2035,2037,
2039,2038,2040,
2042,2041,2043,
2045,2044,2046,
2048,2047,2049,
2051,2050,2052,
2054,2053,2055,
2057,2056,2058,
2060,2059,2061,
2063,2062,2064,
2066,2065,2067,
2069,2068,2070,
2072,2071,2073,
2075,2074,2076,
2078,2077,2079,
2081,2080,2082,
2084,2083,2085,
2087,2086,2088,
2090,2089,2091,
2093,2092,2094,
2096,2095,2097,
2099,2098,2100,
2102,2101,2103,
2105,2104,2106,
2108,2107,2109,
2111,2110,2112,
2114,2113,2115,
2117,2116,2118,
2120,2119,2121,
2123,2122,2124,
2126,2125,2127,
2129,2128,2130,
2132,2131,2133,
2135,2134,2136,
2138,2137,2139,
2141,2140,2142,
2144,2143,2145,
2147,2146,2148,
2150,2149,2151,
2153,2152,2154,
2156,2155,2157,
2159,2158,2160,
2162,2161,2163,
2165,2164,2166,
2168,2167,2169,
2171,2170,2172,
2174,2173,2175,
2177,2176,2178,
2180,2179,2181,
2183,2182,2184,
2186,2185,2187,
2189,2188,2190,
2192,2191,2193,
2195,2194,2196,
2198,2197,2199,
2201,2200,2202,
2204,2203,2205,
2207,2206,2208,
2210,2209,2211,
2213,2212,2214,
2216,2215,2217,
2219,2218,2220,
2222,2221,2223,
2225,2224,2226,
2228,2227,2229,
2231,2230,2232,
2234,2233,2235,
2237,2236,2238,
2240,2239,2241,
2243,2242,2244,
2246,2245,2247,
2249,2248,2250,
2252,2251,2253,
2255,2254,2256,
2258,2257,2259,
2261,2260,2262,
2264,2263,2265,
2267,2266,2268,
2270,2269,2271,
2273,2272,2274,
2276,2275,2277,
2279,2278,2280,
2282,2281,2283,
2285,2284,2286,
2288,2287,2289,
2291,2290,2292,
2294,2293,2295,
2297,2296,2298,
2300,2299,2301,
2303,2302,2304,
2306,2305,2307,
2309,2308,2310,
2312,2311,2313,
2315,2314,2316,
2318,2317,2319,
2321,2320,2322,
2324,2323,2325,
2327,2326,2328,
2330,2329,2331,
2333,2332,2334,
2336,2335,2337,
2339,2338,2340,
2342,2341,2343,
2345,2344,2346,
2348,2347,2349,
2351,2350,2352,
2354,2353,2355,
2357,2356,2358,
2360,2359,2361,
2363,2362,2364,
2366,2365,2367,
2369,2368,2370,
2372,2371,2373,
2375,2374,2376,
2378,2377,2379,
2381,2380,2382,
2384,2383,2385,
2387,2386,2388,
2390,2389,2391,
2393,2392,2394,
2396,2395,2397,
2399,2398,2400,
2402,2401,2403,
2405,2404,2406,
2408,2407,2409,
2411,2410,2412,
2414,2413,2415,
2417,2416,2418,
2420,2419,2421,
2423,2422,2424,
2426,2425,2427,
2429,2428,2430,
2432,2431,2433,
2435,2434,2436,
2438,2437,2439,
2441,2440,2442,
2444,2443,2445,
2447,2446,2448,
2450,2449,2451,
2453,2452,2454,
2456,2455,2457,
2459,2458,2460,
2462,2461,2463,
2465,2464,2466,
2468,2467,2469,
2471,2470,2472,
2474,2473,2475,
2477,2476,2478,
2480,2479,2481,
2483,2482,2484,
2486,2485,2487,
2489,2488,2490,
2492,2491,2493,
2495,2494,2496,
2498,2497,2499,
2501,2500,2502,
2504,2503,2505,
2507,2506,2508,
2510,2509,2511,
2513,2512,2514,
2516,2515,2517,
2519,2518,2520,
2522,2521,2523,
2525,2524,2526,
2528,2527,2529,
2531,2530,2532,
2534,2533,2535,
2537,2536,2538,
2540,2539,2541,
2543,2542,2544,
2546,2545,2547,
2549,2548,2550,
2552,2551,2553,
2555,2554,2556,
2558,2557,2559,
2561,2560,2562,
2564,2563,2565,
2567,2566,2568,
2570,2569,2571,
2573,2572,2574,
2576,2575,2577,
2579,2578,2580,
2582,2581,2583,
2585,2584,2586,
2588,2587,2589,
2591,2590,2592,
2594,2593,2595,
2597,2596,2598,
2600,2599,2601,
2603,2602,2604,
2606,2605,2607,
2609,2608,2610,
2612,2611,2613,
2615,2614,2616,
2618,2617,2619,
2621,2620,2622,
2624,2623,2625,
2627,2626,2628,
2630,2629,2631,
2633,2632,2634,
2636,2635,2637,
2639,2638,2640,
2642,2641,2643,
2645,2644,2646,
2648,2647,2649,
2651,2650,2652,
2654,2653,2655,
2657,2656,2658,
2660,2659,2661,
2663,2662,2664,
2666,2665,2667,
2669,2668,2670,
2672,2671,2673,
2675,2674,2676,
2678,2677,2679,
2681,2680,2682,
2684,2683,2685,
2687,2686,2688,
2690,2689,2691,
2693,2692,2694,
2696,2695,2697,
2699,2698,2700,
2702,2701,2703,
2705,2704,2706,
2708,2707,2709,
2711,2710,2712,
2714,2713,2715,
2717,2716,2718,
2720,2719,2721,
2723,2722,2724,
2726,2725,2727,
2729,2728,2730,
2732,2731,2733,
2735,2734,2736,
2738,2737,2739,
2741,2740,2742,
2744,2743,2745,
2747,2746,2748,
2750,2749,2751,
2753,2752,2754,
2756,2755,2757,
2759,2758,2760,
2762,2761,2763,
2765,2764,2766,
2768,2767,2769,
2771,2770,2772,
2774,2773,2775,
2777,2776,2778,
2780,2779,2781,
2783,2782,2784,
2786,2785,2787,
2789,2788,2790,
2792,2791,2793,
2795,2794,2796,
2798,2797,2799,
2801,2800,2802,
2804,2803,2805,
2807,2806,2808,
2810,2809,2811,
2813,2812,2814,
2816,2815,2817,
2819,2818,2820,
2822,2821,2823,
2825,2824,2826,
2828,2827,2829,
2831,2830,2832,
2834,2833,2835,
2837,2836,2838,
2840,2839,2841,
2843,2842,2844,
2846,2845,2847,
2849,2848,2850,
2852,2851,2853,
2855,2854,2856,
2858,2857,2859,
2861,2860,2862,
2864,2863,2865,
2867,2866,2868,
2870,2869,2871,
2873,2872,2874,
2876,2875,2877,
2879,2878,2880,
2882,2881,2883,
2885,2884,2886,
2888,2887,2889,
2891,2890,2892,
2894,2893,2895,
2897,2896,2898,
2900,2899,2901,
2903,2902,2904,
2906,2905,2907,
2909,2908,2910,
2912,2911,2913,
2915,2914,2916,
2918,2917,2919,
2921,2920,2922,
2924,2923,2925,
2927,2926,2928,
2930,2929,2931,
2933,2932,2934,
2936,2935,2937,
2939,2938,2940,
2942,2941,2943,
2945,2944,2946,
2948,2947,2949,
2951,2950,2952,
2954,2953,2955,
2957,2956,2958,
2960,2959,2961,
2963,2962,2964,
2966,2965,2967,
2969,2968,2970,
2972,2971,2973,
2975,2974,2976,
2978,2977,2979,
2981,2980,2982,
2984,2983,2985,
2987,2986,2988};



const int MSD::NumberOfConstraints =2983;

const int MSD::magicNumber = 0xFACEB0B4;

const int MSD::sourceId = 36620;

MSD MolecularSystemDef;

#endif // MSD_COMPILE_CODE_ONLY

// This is the common area, defines go here...
#define NUMBER_OF_SITES 2989
#define MSD_RTP_BoundingBoxDef_NONCONST  
#define MSD_RTP_PressureControlTarget_NONCONST  
#define EXCLUSION_LIST1_2_3_4 3033
#define MSD_RTP_PressureControlPistonInitialVelocity_NONCONST  
#define NUMBER_OF_FRAGMENTS 996
#define NUMBER_OF_SITES_PER_THERMOSTAT 3
#define MSD_RTP_VelocityResamplePeriodInOTS_NONCONST  
#define MSD_RTP_VelocityResampleTargetTemperature_NONCONST  
#define MSD_RTP_EmitEnergyTimeStepModulo_NONCONST  
#define NUMBER_OF_NSQ_SITE_TYPES 10
#define PAIR14_SITE_LIST_SIZE 24
#define MSD_RTP_VelocityResampleRandomSeed_NONCONST  
#define MSD_RTP_NumberOfOuterTimeSteps_NONCONST  
#define NUMBER_OF_SHELLS 1
#define MSD_RTP_SnapshotPeriodInOTS_NONCONST  
#define MSD_RTP_PressureControlPistonMass_NONCONST  
#define NUMBER_OF_RESPA_LEVELS 1

#ifndef MSD_COMPILE_DATA_ONLY

extern MSD MolecularSystemDef;

struct RTG_PARAMETERS
{
  enum { NUM_OF_SHELLS               = NUMBER_OF_SHELLS }; 
  enum { NUM_OF_THERMOSTATS          = 2 }; 
  enum { NUM_OF_FRAGMENTS            = NUMBER_OF_FRAGMENTS }; 
  enum { NUM_OF_SITES_PER_THERMOSTAT = 1 }; 
};

RunTimeGlobals< RTG_PARAMETERS > RTG;

/****************************************************************************
 *  Payload logic 
 * 
 * The confusion is due to our commitment to support both phase 1 and phase 2 
 ****************************************************************************/ 
#include <pk/pkmath.h>

#define EXPECTED_PAYLOAD_SUM ( 0xffffffff >> 1 ) // max unsigned int divided by 2 
#define UDF_PAYLOAD          (  EXPECTED_PAYLOAD_SUM / Platform::Topology::GetAddressSpaceCount() )
#define EmitEnergyDistributed( TimeStep, UdfCode, Energy ) \ 
  ED_Emit_UDFd1( TimeStep, UdfCode, UDF_PAYLOAD,  Energy) 
#define EmitEnergyUni(TimeStep, UdfCode, Energy) ED_Emit_UDFd1( TimeStep, UdfCode, EXPECTED_PAYLOAD_SUM,  Energy)
#ifdef PK_PARALLEL
// If we're in phase 2 then all the energy emits are distributed.
// If we're in phase 1 then only some are distributed. So hence the UniContext distinction.
#if ( defined (PK_PHASE2) || defined (PK_PHASE1_5) )
#define EmitEnergy(TimeStep, UdfCode, Energy, UniContext) EmitEnergyDistributed( TimeStep, UdfCode, Energy )
#else
#define EmitEnergy(TimeStep, UdfCode, Energy, UniContext) \ 
{ \ 
if( UniContext == 1 ) \ 
  EmitEnergyUni( TimeStep, UdfCode, Energy ); \ 
else \ 
  EmitEnergyDistributed( TimeStep, UdfCode, Energy ); \ 
} 
#endif 
#else
#define EmitEnergy(TimeStep, UdfCode, Energy, UniContext) EmitEnergyUni( TimeStep, UdfCode, Energy )
#endif
/**********************************************************************/
#define EmitTimeStamp(TimeStep, TypeTag, ToEmit)           \ 
 if( ToEmit )                                              \ 
 if( Platform::Topology::GetAddressSpaceId() == 0 ) \ 
   {                                                       \ 
   TimeValue TimeNow = Platform::Clock::GetTimeValue();    \ 
   ED_Emit_ControlTimeStamp(TimeStep, TypeTag, Platform::Topology::GetAddressSpaceId(), \ 
                            TimeNow.Seconds, TimeNow.Nanoseconds );                     \ 
   } 
#include <BlueMatter/UDF_BindingWrapper.hpp>

#include <BlueMatter/DynamicVariableManager.hpp>

typedef TDynamicVariableManager< NUMBER_OF_SITES,
                                 NUMBER_OF_FRAGMENTS,
                                 NUMBER_OF_RESPA_LEVELS
                               > DynamicVariableManager;
DynamicVariableManager DynVarMgrIF;

#include <BlueMatter/RandomNumberGenerator.hpp>

RandomNumberGenerator RanNumGenIF;

#include <BlueMatter/MDVM_IF.hpp>

#include <BlueMatter/LocalTupleListDriver.hpp>

#include <BlueMatter/LocalFragmentDirectDriver.hpp>

// This file is meant to contain code that modifys how the
// msd.hpp file information is seen by the core.

#include <BlueMatter/TupleDriverUdfBinder.hpp>



class ParamAccessor_Base
  {
  public:
    static void Init(){}
  };

template< int UdfInvocationInstance >
class ParamAccessor{};

class ImproperDihedralForceAccessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::ImproperDihedralForce_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::ImproperDihedralForce_paramsParamTupleList[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_ImproperDihedralForce,
                1,
                MSD::ImproperDihedralForce_sitesSiteTupleList,
                ImproperDihedralForceAccessor > ImproperDihedralForceUDF_Bound;

class StdHarmonicAngleForceAccessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::StdHarmonicAngleForce_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::StdHarmonicAngleForce_paramsParamTupleList[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_StdHarmonicAngleForce,
                21,
                MSD::StdHarmonicAngleForce_sitesSiteTupleList,
                StdHarmonicAngleForceAccessor > StdHarmonicAngleForceUDF_Bound;

class StdHarmonicBondForceAccessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::StdHarmonicBondForce_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::StdHarmonicBondForce_paramsParamTupleList[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_StdHarmonicBondForce,
                5,
                MSD::StdHarmonicBondForce_sitesSiteTupleList,
                StdHarmonicBondForceAccessor > StdHarmonicBondForceUDF_Bound;

class SwopeTorsionForceAccessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::SwopeTorsionForce_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::SwopeTorsionForce_paramsParamTupleList[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_SwopeTorsionForce,
                24,
                MSD::SwopeTorsionForce_sitesSiteTupleList,
                SwopeTorsionForceAccessor > SwopeTorsionForceUDF_Bound;

class UreyBradleyForceAccessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::UreyBradleyForce_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::UreyBradleyForce_paramsParamTupleList[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_UreyBradleyForce,
                12,
                MSD::UreyBradleyForce_sitesSiteTupleList,
                UreyBradleyForceAccessor > UreyBradleyForceUDF_Bound;

class Coulomb14Accessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::Coulomb14_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::Charge14PairTable[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_Coulomb14,
                24,
                MSD::Pair14SiteList,
                Coulomb14Accessor > Coulomb14UDF_Bound;

template<class Combiner>
class LennardJones14ParamAccessor   : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::LennardJonesForce_Params ParamType;

//    static ParamType* combinedParameterArray;

    static
    void
    Init()
    {
      int numberOfSiteTuples =  PAIR14_SITE_LIST_SIZE;
      int paramSize          = sizeof(ParamType);

      ParamType* combinedParameterArray = NULL;
      GetParam( -1, &combinedParameterArray );

      for (int i = 0; i < numberOfSiteTuples; i++)
        {

          int site1 = MSD::Pair14SiteList[ 2*i ];
          int site2 = MSD::Pair14SiteList[ 2*i + 1 ];

          int siteType1 = MSD::SiteIDtoSiteTypeMap[ site1 ];
          int siteType2 = MSD::SiteIDtoSiteTypeMap[ site2 ];
          Combiner::Combine<ParamType>( MSD::LJ14PairTable[ siteType1 ],  MSD::LJ14PairTable[ siteType2 ], combinedParameterArray[ i ] );
        }
    }

    static
    const ParamType&
    GetParam( int i , ParamType **SecretParameterArrayReturnField = (ParamType **) 0xFFFFFFFF )
      {
      static ParamType CombinedParameterArray[ PAIR14_SITE_LIST_SIZE ];
      if( SecretParameterArrayReturnField != (ParamType **)0xFFFFFFFF )
        {
        *SecretParameterArrayReturnField = CombinedParameterArray;
        return( CombinedParameterArray[ 0 ] );
        }
      return( CombinedParameterArray[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_LennardJones14Force,
                PAIR14_SITE_LIST_SIZE,
                MSD::Pair14SiteList,
                LennardJones14ParamAccessor<LennardJones14CHARMMCombiner > > LennardJones14UDF_Bound;




///----------------------------------------------------------------

// This is needed for EwaldCorrection and LeknerCorrection
template<class Combiner>
class Coulomb1_2_3_4ParamAccessor   : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::NSQCoulomb_Params ParamType;

//    static ParamType* combinedParameterArray;

    static
    void
    Init()
    {
      int numberOfSiteTuples =  EXCLUSION_LIST1_2_3_4;
      int paramSize          = sizeof(ParamType);

      ParamType* combinedParameterArray = NULL;
      GetParam( -1, &combinedParameterArray );

      for (int i = 0; i < numberOfSiteTuples; i++)
        {
          int site1 = MSD::ExclusionList1_2_3_4[ 2*i ];
          int site2 = MSD::ExclusionList1_2_3_4[ 2*i + 1 ];

          int siteType1 = MSD::SiteIDtoSiteTypeMap[ site1 ];
          int siteType2 = MSD::SiteIDtoSiteTypeMap[ site2 ];
          
          ParamType charge1;
          ParamType charge2;
          charge1.ChargeAxB = MSD::SiteInformation[ siteType1 ].charge;
          charge2.ChargeAxB = MSD::SiteInformation[ siteType2 ].charge;
          
          Combiner::Combine<ParamType>( charge1 ,  
                                        charge2, 
                                        combinedParameterArray[ i ] );
        }
    }

    static
    const ParamType&
    GetParam( int i , ParamType **SecretParameterArrayReturnField = (ParamType **) 0xFFFFFFFF )
      {
      static ParamType CombinedParameterArray[ EXCLUSION_LIST1_2_3_4 ];
      if( SecretParameterArrayReturnField != (ParamType **)0xFFFFFFFF )
        {
        *SecretParameterArrayReturnField = CombinedParameterArray;
        return( CombinedParameterArray[ 0 ] );
        }
      return( CombinedParameterArray[ i ] );
      }
  };




class  NSQCoulombParamsAccessor  : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::NSQCoulomb_Params ParamType;

    static
    const ParamType&
    GetParam( int aAbsSiteId )
      {
      // contain the map to compressed parameter table in this method
      int ParamSiteType =  MSD::NsqSiteIDtoSiteTypeMap[ aAbsSiteId ];
      // could assert array bounds here - even compile time assert!
      return( MSD::ChargeNsqParams[ ParamSiteType ] );
      }
  };



///----------------------------------------------------------------

class NSQLennardJonesParamAccessor  : public ParamAccessor_Base
  {
  public:

    typedef  UDF_Binding::NSQLennardJones_Params ParamType;

    static
    const ParamType&
    GetParamByIndex( int aIndex )
    {
    return(  MSD::LJNsqParams[ aIndex ] );
    }


    static
    const ParamType&
    GetParam( int aAbsSiteId )
      {
      int ParamSiteType =  MSD::NsqSiteIDtoSiteTypeMap[ aAbsSiteId ];
      return(  MSD::LJNsqParams[ ParamSiteType ] );
      }
  };


#include <BlueMatter/IFP_Binder.hpp>
typedef IFP_Binder<UDF_NSQCHARMMLennardJonesForce,  NSQLennardJonesParamAccessor> UDF_LennardJonesForce_Bound;

typedef IFP_Binder<UDF_NSQCoulomb,  NSQCoulombParamsAccessor> UDF_NSQCoulomb_Bound;

typedef UdfGroup
        < UDF_NSQCoulomb_Bound,
          UDF_LennardJonesForce_Bound
        > NsqUdfGroup;
  typedef LocalFragmentDirectDriver
          < UDF_UpdateVelocity,
            UDF_ZeroForce
          > MSD_TYPED_LFD_UpdateVelocityFirstHalfStepDriver; // This name is expected by code in main loop
  typedef LocalFragmentDirectDriver
          < UDF_UpdateVelocity
          > MSD_TYPED_LFD_UpdateVelocitySecondHalfStepDriver; // This name is expected by code in main loop

typedef LocalFragmentDirectDriver
        < UDF_KineticEnergy
        > MSD_TYPED_LFD_UpdateKineticEnergyDriver;  // This name is expected in the main loop
  typedef LocalFragmentDirectDriver
          < UDF_UpdatePosition
          > MSD_TYPED_LFD_UpdatePositionDriver;  // This name is expected in the main loop

typedef SiteTupleDriver
        <  MDVM ,
           ImproperDihedralForceUDF_Bound,
           StdHarmonicAngleForceUDF_Bound,
           StdHarmonicBondForceUDF_Bound,
           SwopeTorsionForceUDF_Bound,
           UreyBradleyForceUDF_Bound,
           Coulomb14UDF_Bound,
           LennardJones14UDF_Bound
        > MSD_TYPED_STD_BondedForceDriver;  // This name is expected by code in main loop
typedef TupleDriverUdfBinder <UDF_WaterTIP3PInit,
                              992,
                              MSD::Water3sites,
                              NULL_ParamAccessor > WaterInitUDF_Bound;

typedef TupleDriverUdfBinder <UDF_WaterTIP3PShake,
                              992,
                              MSD::Water3sites,
                              NULL_ParamAccessor > WaterShakeUDF_Bound;

typedef TupleDriverUdfBinder <UDF_WaterTIP3PRattle,
                              992,
                              MSD::Water3sites,
                              NULL_ParamAccessor > WaterRattleUDF_Bound;


class RigidShake2Accessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::ShakeGroup2_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::Rigid2Params[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_ShakeGroup2,
                              1,
                              MSD::Rigid2Sites,
                              RigidShake2Accessor > RigidShake2UDF_Bound;


class RigidShake4Accessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::ShakeGroup4_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::Rigid4Params[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_ShakeGroup4,
                              2,
                              MSD::Rigid4Sites,
                              RigidShake4Accessor > RigidShake4UDF_Bound;


class RigidRattle2Accessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::ShakeGroup2_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::Rigid2Params[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_RattleGroup2,
                              1,
                              MSD::Rigid2Sites,
                              RigidRattle2Accessor > RigidRattle2UDF_Bound;


class RigidRattle4Accessor : public ParamAccessor_Base
  {
  public:

    typedef UDF_Binding::ShakeGroup4_Params ParamType;

    static
    const ParamType&
    GetParam( int i )
      {
      return( MSD::Rigid4Params[ i ] );
      }
  };

typedef TupleDriverUdfBinder< UDF_RattleGroup4,
                              2,
                              MSD::Rigid4Sites,
                              RigidRattle4Accessor > RigidRattle4UDF_Bound;

#include <BlueMatter/MDVM_UVP_IF.hpp>

typedef SiteTupleDriver
        <  MDVM_UVP
,        WaterInitUDF_Bound
        > MSD_TYPED_STD_GroupInitDriver;  // This name is expected by code in main loop

typedef SiteTupleDriver
        <  MDVM_UVP
,        WaterShakeUDF_Bound
,        RigidShake2UDF_Bound
,        RigidShake4UDF_Bound
        > MSD_TYPED_STD_GroupShakeDriver;  // This name is expected by code in main loop

typedef SiteTupleDriver
        <  MDVM_UVP
,        WaterRattleUDF_Bound
,        RigidRattle2UDF_Bound
,        RigidRattle4UDF_Bound
        > MSD_TYPED_STD_GroupRattleDriver;  // This name is expected by code in main loop

#endif

#ifndef MSD_COMPILE_CODE_ONLY

const int MSD::NumberOfEnergyReportingUDFs = 11;

#endif

#ifndef MSD_COMPILE_DATA_ONLY

#include <BlueMatter/MSD_IF.hpp>

#include <BlueMatter/RunTimeGlobalsInit.hpp>

#include <pk/AtomicOps.hpp>
#include <pk/ThreadCreate.hpp>
#include <pk/Barrier.hpp>
using namespace std ;
#include <BlueMatter/PeriodicImage.hpp>

#include <BlueMatter/RandomVelocity.hpp>

XYZ  *StartingVelocities;
XYZ  *StartingPositions;
int NoseHooverRestart;
#include <BlueMatter/DVSFile.hpp>
#include <BlueMatter/IFP.hpp>
#include <BlueMatter/NSQ.hpp>
typedef IFP< NsqUdfGroup,
                         UDF_SwitchFunction,
                         UDF_SwitchFunctionForce,
                         NUMBER_OF_SHELLS,
                      1
                       > IFP_TYPE; 

typedef NSQAnchor<
                  DynamicVariableManager,
                  IFP_TYPE
                 > PNBE_TYPE;

PNBE_TYPE PNBE;


#include <BlueMatter/p2.hpp>

#endif
#endif

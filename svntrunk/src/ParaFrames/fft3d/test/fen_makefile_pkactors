# ------------------------------------------------------------- #
# Product(s):                                                   #
# 5733-BG1                                                      #
#                                                               #
# (C)Copyright IBM Corp. 2004, 2004                             #
# All rights reserved.                                          #
# US Government Users Restricted Rights -                       #
# Use, duplication or disclosure restricted                     #
# by GSA ADP Schedule Contract with IBM Corp.                   #
#                                                               #
# Licensed Materials-Property of IBM                            #
# ------------------------------------------------------------- #

BL_FLOOR = /bgl/BlueLight/ppcfloor
BL_INSTALL = /bgl/BlueLight/ppcfloor

BGL_HOME_DIR = /bgwhome1/bgf/bonb

#BGLDEVICES=/bgl/giampap/bglsw_20050317/src/bglsw/devices
BGLDEVICES=/bgl/BlueLight/ppcfloor/bglsys/include

#
# The following variables, if non-blank, must end in a '/'.
#
BLADE_SRCDIR=./
BLADE_OBJDIR=./
BLADE_SPIDIR=../../pk/bonb

COPY    = /bin/cp -p
RM      = /bin/rm -f
#CC      = $(BL_FLOOR)/blrts-gnu/bin/powerpc-bgl-blrts-gnu-gcc
CC      = $(BL_FLOOR)/blrts-gnu/bin/powerpc-bgl-blrts-gnu-g++
XLCPP   = /opt/ibmcmp/vacpp/bg/8.0/bin/blrts_xlC -qnolm
AR      = $(BL_FLOOR)/blrts-gnu/bin/powerpc-bgl-blrts-gnu-ar
RANLIB  = $(BL_FLOOR)/blrts-gnu/bin/powerpc-bgl-blrts-gnu-ranlib
#OBJDUMP = $(BL_FLOOR)/blrts-gnu/bin/powerpc-bgl-blrts-gnu-objdump -D -f -h -l
OBJDUMP = $(BL_FLOOR)/blrts-gnu/bin/powerpc-bgl-blrts-gnu-objdump -d
OBJCOPY = objcopy

# Add these to COMPILE_MACROS if you neded to see what is going on ...
TRACE_MACROS=\
-DPKTRACE -DPKTRACE_ON -DPKTRACE_TUNE=1 \
-DPKFXLOG  \
-DPKTRACE_ALLTOALLV_DETAIL \


COMPILE_MACROS= \
-DxFFT_FIX_DATA \
-DxPRINT_OUTPUT \
-DPKMAIN_ON_ALL_CORES \
-DA2A_WITH_ACTORS \
-DUSE_PK_ACTORS \
-DUSE_UNIX_MALLOC \
-DNDEBUG \
-DPKT_STAND_ALONE \
-DPK_PARALLEL \
-DPK_BGL \
-DPK_BLADE_SPI \
-DPK_ALL2ALL_BY_DRAIN \
-DxREPORT_FIFO_HISTOGRAM \
-DxPKFXLOG \
-DxPKFXLOG_ALLTOALLV \
-DxPKFXLOG_ALLTOALLV_INIT \
-DxPKFXLOG_FFTMAIN \
-DxPKFXLOG_FFT_DETAIL \
-DxPKFXLOG_FFT_ALLOCATION \
-DxPKFXLOG_FFT_SUMMARY \
-DxCHECK_OTHER_FIFOS \
-DxPKFXLOG_ALLTOALLV_STRAGGLERS \
-DxPKFXLOG_ALLTOALLV_CORRELATE \
-DxPKFXLOG_FFTITERATION \
-DPKFXLOG_BGL_ACTOR=1-1 \
-DPKFXLOG_PK_FIBER=1-1 \
-DPKFXLOG_ALLTOALLV=1-1 \
-DPKFXLOG_ALLTOALLV_INIT=1-1 \
-DPKFXLOG_ALLTOALLV_CORRELATE=1-1 \
-DPKFXLOG_BGL_TORUS=1-1 \
-DxPKFXLOG_HEAP_PLUG \
-DxPKFXLOG_FFT_ONED \
-DxPKFXLOG_HEAP \
-DxPK_LEAKY_HEAP \
-DxBL_MALLOC_DEBUG=3 \
-DxFFT_FIX_DATA \
-DxPRINT_OUTPUT \
-DPKACTORS_A2A_VIRTUAL_SOURCE \
-DREPORT_FIFO_HISTOGRAM \
-DPK_HEAP_MB=256 \
-DPK_SEND_BY_GROUP \
-DPK_EARLY_SEND \
-DPK_PROCESS_BY_DRAIN \
-DxPKFXLOG_BGL_TORUS \
-DxPKFXLOG_NODE \
-DPK_STRONG_ASSERT_ONLY_TRAP \
$(TRACE_MACROS) \

#CFLAGS = -Wall -g -I. -I../../../../include/spi/ -I$(BL_INSTALL)/bglsys/include -I$(BGLDEVICES) -I../../../include/ 
CFLAGS = -g -O3 -DUSE_UNIX_MALLOC -I.  -I$(BL_INSTALL)/bglsys/include -I$(BGLDEVICES) -I../../../include/  $(COMPILE_MACROS)

# Compiler messages being suppressed are
# 1540-1088 Exception specification being ignored
# 1540-1087 Catch block has no effect
# 1540-1090 Destructor might not be called

XLCFLAGS = -qsource -qshowinc -qnoeh -qarch=440d -qdebug=inl:inl99 -qdebug=inlstats -I. -I$(BL_INSTALL)/bglsys/include -I$(BGLDEVICES) -I../../../include/ \
-qsuppress=1540-1088:1540-1087:1540-1090 \
-g -O3 \
$(COMPILE_MACROS) \
-DPK_XLC \

#CFLAGS = -Wall -O3 -DNDEBUG -I../include -I$(BL_INSTALL)/bglsys/include -I$(BGLDEVICES)
AFLAGS = -D__ASSEMBLY__

#LIBFFTW = /bgl/local/bglfftwgel-2.1.5/lib/libfftw.a
LIBFFTW = /bgl/local/fftw-2.1.5/lib/libfftw.a
LIBS_RTS = -L$(BL_INSTALL)/bglsys/lib -L$(BLADE_SPIDIR) -lbonb.rts -ldevices.rts -lrts.rts -ldevices.rts -lrts.rts


.SUFFIXES: .S .c .cpp .o .a

.S.o:
	@echo "$<"
	@$(CC) $(CFLAGS) $(AFLAGS) $< -o $*.o

.c.o:
	@echo "$<"
	@$(CC) $(CFLAGS) $< -o $*.o

.cpp.o:
	@echo "$<"
	@$(CC) $(CFLAGS) $< -o $*.o



#
# Default Target for this Makefile is to build the SPI Library.
#
#all:	treehood.rts ThrobbinHood.rts

all:	fftmain_pk.rts 



fftmain_pk.o:	fftmain_pk.cpp
		$(XLCPP) $(XLCFLAGS) -c -qsource -qshowinc -qlist -qdebug=plst3:cycles fftmain_pk.cpp

fxlogger.o: ../../pk/fxlogger.cpp
		$(XLCPP) $(XLCFLAGS) -c ../../pk/fxlogger.cpp

platform.o: ../../pk/platform.cpp
		$(XLCPP) $(XLCFLAGS) -c ../../pk/platform.cpp

pktrace.o: ../../pk/pktrace.cpp
		$(XLCPP) $(XLCFLAGS) -c ../../pk/pktrace.cpp

coprocessor_on_coprocessor.o: ../../pk/coprocessor_on_coprocessor.cpp
		$(XLCPP) $(XLCFLAGS) -c ../../pk/coprocessor_on_coprocessor.cpp
		
packet_alltoallv_PkActors.o: ../../pk/a2a/packet_alltoallv_PkActors.cpp
		 $(XLCPP) $(XLCFLAGS)  -c -qsource -qshowinc -qlist -qdebug=dumpstr ../../pk/a2a/packet_alltoallv_PkActors.cpp

Main_BonB.o: ../../../include/Pk/Main_BonB.cpp
		$(XLCPP) $(XLCFLAGS)  -c -qsource -qshowinc -qlist ../../../include/Pk/Main_BonB.cpp
         
Main_ParsePkArgs.o: ../../../include/Pk/Main_ParsePkArgs.cpp
		$(XLCPP) $(XLCFLAGS)  -c -qsource -qshowinc -qlist ../../../include/Pk/Main_ParsePkArgs.cpp
         
Heap.o: ../../../include/Pk/Heap.cpp
		$(XLCPP) $(XLCFLAGS)  -c -qsource -qshowinc -qlist ../../../include/Pk/Heap.cpp
         
FASched.o: ../../../include/Pk/FASched.cpp
		$(XLCPP) $(XLCFLAGS)  -c -qsource -qshowinc -qlist ../../../include/Pk/FASched.cpp
         
#  fxlogger.o pktrace.o coprocessor_on_coprocessor.o 

fftmain_pk.rts:	fftmain_pk.o  Main_BonB.o Main_ParsePkArgs.o Heap.o FASched.o packet_alltoallv_PkActors.o
		mkdir -p libfftw && cd libfftw && $(AR) -x $(LIBFFTW) && $(OBJCOPY) --redefine-sym malloc=pkPlugHeapAllocate  --redefine-sym free=pkPlugHeapFree malloc.o malloc_for_pk.o && rm malloc.o && rm -f ../libfftw_pk.a && chmod 644 `find . -type f` && ar -crs ../libfftw_pk.a `find . -type f`
		$(XLCPP) -pg -Wl,-zmuldefs -o fftmain_pk.rts fftmain_pk.o Main_BonB.o Main_ParsePkArgs.o Heap.o FASched.o packet_alltoallv_PkActors.o -L. -lfftw_pk $(LIBS_RTS) 
		$(OBJDUMP) fftmain_pk.rts > fftmain_pk.objdump



clean::
	@echo "Cleaning `basename $$PWD`"
	@-$(RM) *.rts *.o *.listing


distclean:	clean
	@echo "Dist-cleaning `basename $$PWD`"
	@-$(RM) ./Make.depend


depend::
	@echo "Making dependencies for `basename $$PWD`"
	@-$(RM) ./Make.depend
	@$(CC) -M $(CFLAGS) fftmain_pk.cpp > ./Make.depend


fresh::	distclean all

install::
	@echo "Copying files to $(BGL_HOME_DIR)"
	@$(COPY) fftmain_pk.rts $(BGL_HOME_DIR)


-include ./Make.depend
